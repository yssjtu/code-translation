public ChartStartBlockRecord(RecordInputStream in) {rt = in.readShort();grbitFrt = in.readShort();iObjectKind = in.readShort();iObjectContext = in.readShort();iObjectInstance1 = in.readShort();iObjectInstance2 = in.readShort();}
public void fill(int fromIndex, int toIndex, long val) {assert val <= maxValue(getBitsPerValue());assert fromIndex <= toIndex;for (int i = fromIndex; i < toIndex; ++i) {set(i, val);}}
public void setStreamFileThreshold(int newLimit) {streamFileThreshold = newLimit;}
public DescribeStackDriftDetectionStatusResult describeStackDriftDetectionStatus(DescribeStackDriftDetectionStatusRequest request) {request = beforeClientExecution(request);return executeDescribeStackDriftDetectionStatus(request);}
public void serialize(LittleEndianOutput out) {futureHeader.serialize(out);out.writeShort(isf_sharedFeatureType);out.writeByte(reserved);out.writeInt((int)cbHdrData);out.write(rgbHdrData);}
public StopContactResult stopContact(StopContactRequest request) {request = beforeClientExecution(request);return executeStopContact(request);}
public int byteAt(int idx) {return bytes[idx].value;}
public Explanation explain(Explanation freq, long norm) {List<Explanation> subs = new ArrayList<>();for (SimScorer subScorer : subScorers) {subs.add(subScorer.explain(freq, norm));}return Explanation.match(score(freq.getValue().floatValue(), norm), "sum of:", subs);}
public CreateSmsTemplateResult createSmsTemplate(CreateSmsTemplateRequest request) {request = beforeClientExecution(request);return executeCreateSmsTemplate(request);}
public DisassociatePhoneNumberFromUserResult disassociatePhoneNumberFromUser(DisassociatePhoneNumberFromUserRequest request) {request = beforeClientExecution(request);return executeDisassociatePhoneNumberFromUser(request);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[EXTSST]\n");buffer.append("    .dsst           = ").append(Integer.toHexString(_stringsPerBucket)).append("\n");buffer.append("    .numInfoRecords = ").append(_sstInfos.length).append("\n");for (int k = 0; k < _sstInfos.length; k++){buffer.append("    .inforecord     = ").append(k).append("\n");buffer.append("    .streampos      = ").append(Integer.toHexString(_sstInfos[k].getStreamPos())).append("\n");buffer.append("    .sstoffset      = ").append(Integer.toHexString(_sstInfos[k].getBucketSSTOffset())).append("\n");}buffer.append("[/EXTSST]\n");return buffer.toString();}
public CleanCommand clean() {return new CleanCommand(repo);}
public CellRangeAddress getCellRangeAddress(int index) {return _list.get(index);}
public ApostropheFilterFactory(Map<String, String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameter(s): " + args);}}
public static final int commitMessage(byte[] b, int ptr) {final int sz = b.length;if (ptr == 0)ptr += 46; while (ptr < sz && b[ptr] == 'p')ptr += 48; return tagMessage(b, ptr);}
public CustomViewSettingsRecordAggregate(RecordStream rs) {_begin = rs.getNext();if (_begin.getSid() != UserSViewBegin.sid) {throw new IllegalStateException("Bad begin record");}List<RecordBase> temp = new ArrayList<>();while (rs.peekNextSid() != UserSViewEnd.sid) {if (PageSettingsBlock.isComponentRecord(rs.peekNextSid())) {if (_psBlock != null) {if (rs.peekNextSid() == HeaderFooterRecord.sid) {_psBlock.addLateHeaderFooter((HeaderFooterRecord)rs.getNext());continue;}throw new IllegalStateException("Found more than one PageSettingsBlock in chart sub-stream, had sid: " + rs.peekNextSid());}_psBlock = new PageSettingsBlock(rs);temp.add(_psBlock);continue;}temp.add(rs.getNext());}_recs = temp;_end = rs.getNext(); if (_end.getSid() != UserSViewEnd.sid) {throw new IllegalStateException("Bad custom view settings end record");}}
public Collection<PackFile> getPacks() {PackList list = packList.get();if (list == NO_PACKS)list = scanPacks(list);PackFile[] packs = list.packs;return Collections.unmodifiableCollection(Arrays.asList(packs));}
public SQLException(String theReason) {this(theReason, null, 0);}
public String toExternalString() {final StringBuilder r = new StringBuilder();appendSanitized(r, getName());r.append(" <"); appendSanitized(r, getEmailAddress());r.append("> "); r.append(when / 1000);r.append(' ');appendTimezone(r, tzOffset);return r.toString();}
public IntMapper(final int initialCapacity) {elements = new ArrayList<>(initialCapacity);valueKeyMap = new HashMap<>(initialCapacity);}
public PersonIdent getSourceCommitter() {RevCommit c = getSourceCommit();return c != null ? c.getCommitterIdent() : null;}
public CharVector(int capacity) {if (capacity > 0) {blockSize = capacity;} else {blockSize = DEFAULT_BLOCK_SIZE;}array = new char[blockSize];n = 0;}
@Override public int size() {synchronized (mutex) {return c.size();}}
public LongsRef next(int count) throws IOException {assert count > 0;if (ord == valueCount) {throw new EOFException();}if (off == blockSize) {refill();}count = Math.min(count, blockSize - off);count = (int) Math.min(count, valueCount - ord);valuesRef.offset = off;valuesRef.length = count;off += count;ord += count;return valuesRef;}
public GetHealthCheckCountResult getHealthCheckCount(GetHealthCheckCountRequest request) {request = beforeClientExecution(request);return executeGetHealthCheckCount(request);}
public LongBuffer compact() {System.arraycopy(backingArray, position + offset, backingArray, offset, remaining());position = limit - position;limit = capacity;mark = UNSET_MARK;return this;}
public String getTextAsString() {if (this.text == null)return null;else return this.text.toString();}
public UpdateCustomVerificationEmailTemplateResult updateCustomVerificationEmailTemplate(UpdateCustomVerificationEmailTemplateRequest request) {request = beforeClientExecution(request);return executeUpdateCustomVerificationEmailTemplate(request);}
public int getExternalSheetIndex(String workbookName, String sheetName) {return getOrCreateLinkTable().getExternalSheetIndex(workbookName, sheetName, sheetName);}
public final String toString() {StringBuilder sb = new StringBuilder();String recordName = getRecordName();sb.append("[").append(recordName).append("]\n");sb.append("    .row    = ").append(HexDump.shortToHex(getRow())).append("\n");sb.append("    .col    = ").append(HexDump.shortToHex(getColumn())).append("\n");if (isBiff2()) {sb.append("    .cellattrs = ").append(HexDump.shortToHex(getCellAttrs())).append("\n");} else {sb.append("    .xfindex   = ").append(HexDump.shortToHex(getXFIndex())).append("\n");}appendValueText(sb);sb.append("\n");sb.append("[/").append(recordName).append("]\n");return sb.toString();}
public DescribeTypeRegistrationResult describeTypeRegistration(DescribeTypeRegistrationRequest request) {request = beforeClientExecution(request);return executeDescribeTypeRegistration(request);}
public FeatHdrRecord() {futureHeader = new FtrHeader();futureHeader.setRecordType(sid);}
