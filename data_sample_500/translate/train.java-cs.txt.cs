public override string ToString(){return "D";}
public virtual ICollection<TransportProtocol.URIishField> GetRequiredFields(){return Sharpen.Collections.UnmodifiableSet(EnumSet.Of(TransportProtocol.URIishField.PATH));}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[VCENTER]\n");buffer.Append("    .vcenter        = ").Append(VCenter).Append("\n");buffer.Append("[/VCENTER]\n");return buffer.ToString();}
public override bool Equals(object obj){if (this == obj){return true;}if (obj == null){return false;}if (this.GetType() != obj.GetType()){return false;}FlushInfo other = (FlushInfo)obj;if (EstimatedSegmentSize != other.EstimatedSegmentSize){return false;}if (NumDocs != other.NumDocs){return false;}return true;}
public virtual DescribeFileSystemPolicyResponse DescribeFileSystemPolicy(DescribeFileSystemPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeFileSystemPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeFileSystemPolicyResponseUnmarshaller.Instance;return Invoke<DescribeFileSystemPolicyResponse>(request, options);}
public virtual DescribeLoadBalancerTargetGroupsResponse DescribeLoadBalancerTargetGroups(DescribeLoadBalancerTargetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLoadBalancerTargetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLoadBalancerTargetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeLoadBalancerTargetGroupsResponse>(request, options);}
public override void SetParams(string @params){base.SetParams(@params);m_traversalSize = (int)float.Parse(@params, CultureInfo.InvariantCulture);}
public virtual string ToASCIIString(){return Format(false, true);}
public Ptg GetNameXPtg(String name, SheetIdentifier sheet){int sheetRefIndex = GetSheetExtIx(sheet);return _iBook.GetNameXPtg(name, sheetRefIndex, _uBook.GetUDFFinder());}
public override void Encode(long[] values, int valuesOffset, byte[] blocks, int blocksOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = Encode(values, valuesOffset);valuesOffset += valueCount;blocksOffset = WriteInt64(block, blocks, blocksOffset);}}
public static string ToHex(byte value){return ToHex((long)value, 2);}
public static NGit.Transport.Transport Open(URIish uri){foreach (JavaWeakReference<TransportProtocol> @ref in protocols){TransportProtocol proto = @ref.Get();if (proto == null){protocols.Remove(@ref);continue;}if (proto.CanHandle(uri, null, null)){return proto.Open(uri);}}throw new NGit.Errors.NotSupportedException(MessageFormat.Format(JGitText.Get().URINotSupported, uri));}
public int position(){return _position;}
public override void Write(byte[] b, int off, int len){while (0 < len){int n = Math.Min(len, BYTES_TO_WRITE_BEFORE_CANCEL_CHECK);count += n;if (checkCancelAt <= count){if (writeMonitor.IsCancelled()){throw new IOException(JGitText.Get().packingCancelledDuringObjectsWriting);}checkCancelAt = count + BYTES_TO_WRITE_BEFORE_CANCEL_CHECK;}@out.Write(b, off, n);crc.Update(b, off, n);md.Update(b, off, n);off += n;len -= n;}}
public CommonToken(int type, string text){this._type = type;this._channel = TokenConstants.DefaultChannel;this._text = text;this.source = EmptySource;}
public void NextBuffer(){if (1 + bufferUpto == buffers.Length){int[][] newBuffers = new int[(int)(buffers.Length * 1.5)][];Array.Copy(buffers, 0, newBuffers, 0, buffers.Length);buffers = newBuffers;}buffer = buffers[1 + bufferUpto] = allocator.GetInt32Block();bufferUpto++;Int32Upto = 0;Int32Offset += INT32_BLOCK_SIZE;}
public override bool Equals(object obj){if (!(obj is SemanticContext.PrecedencePredicate)){return false;}if (this == obj){return true;}SemanticContext.PrecedencePredicate other = (SemanticContext.PrecedencePredicate)obj;return this.precedence == other.precedence;}
public PendingTerm(BytesRef term, BlockTermState state): base(true){this.Term = term;this.State = state;}
public Credential(string keyId, string secret, string securityToken){AccessKeyId = keyId;AccessSecret = secret;SecurityToken = securityToken;RefreshDate = new DateTime();}
public static Proxy ProxyFor(ProxySelector proxySelector, Uri u){try{return proxySelector.Select(u.ToURI())[0];}catch (URISyntaxException e){ConnectException err;err = new ConnectException(MessageFormat.Format(JGitText.Get().cannotDetermineProxyFor, u));Sharpen.Extensions.InitCause(err, e);throw err;}}
public virtual E elementAt(int location){lock (this){if (location < elementCount){return (E)elementData[location];}throw arrayIndexOutOfBoundsException(location, elementCount);}}
public virtual MonitorInstancesResponse MonitorInstances(MonitorInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = MonitorInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = MonitorInstancesResponseUnmarshaller.Instance;return Invoke<MonitorInstancesResponse>(request, options);}
public int CompareTo(RowColKey o){int cmp = _rowIndex - o._rowIndex;if (cmp != 0){return cmp;}return _columnIndex - o._columnIndex;}
public override void SeekExact(long ord){throw new System.NotSupportedException(this.GetType().Name + " does not support seeking");}
public virtual CreateApiMappingResponse CreateApiMapping(CreateApiMappingRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateApiMappingRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateApiMappingResponseUnmarshaller.Instance;return Invoke<CreateApiMappingResponse>(request, options);}
public virtual SetVaultNotificationsResponse SetVaultNotifications(SetVaultNotificationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetVaultNotificationsRequestMarshaller.Instance;options.ResponseUnmarshaller = SetVaultNotificationsResponseUnmarshaller.Instance;return Invoke<SetVaultNotificationsResponse>(request, options);}
public override bool contains(object o){return this._enclosing.containsKey(o);}
public override void SeekExact(BytesRef target, TermState otherState){if (!target.Equals(term)){state.CopyFrom(otherState);term = BytesRef.DeepCopyOf(target);seekPending = true;}}
public virtual CreateImageResponse CreateImage(CreateImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateImageRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateImageResponseUnmarshaller.Instance;return Invoke<CreateImageResponse>(request, options);}
public PagedBytesDataOutput GetDataOutput(){if (frozen){throw new InvalidOperationException("cannot get DataOutput after Freeze()");}return new PagedBytesDataOutput(this);}
public virtual DescribeTaskSetsResponse DescribeTaskSets(DescribeTaskSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTaskSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTaskSetsResponseUnmarshaller.Instance;return Invoke<DescribeTaskSetsResponse>(request, options);}
public virtual ResetDBClusterParameterGroupResponse ResetDBClusterParameterGroup(ResetDBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResetDBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ResetDBClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<ResetDBClusterParameterGroupResponse>(request, options);}
public static java.nio.CharBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new System.ArgumentException();}return new java.nio.ReadWriteCharArrayBuffer(capacity_1);}
public virtual void DropChanges(){lock (this){pendingDeleteCount = 0;DropMergingUpdates();}}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_id);out1.WriteByte(field_4_text.Length);if (is16bit){out1.WriteByte(0x01);StringUtil.PutUnicodeLE(field_4_text, out1);}else{out1.WriteByte(0x00);StringUtil.PutCompressedUnicode(field_4_text, out1);}}
public virtual void remove(){if (this.lastEntryReturned == null){throw new System.InvalidOperationException();}if (this._enclosing.modCount != this.expectedModCount){throw new java.util.ConcurrentModificationException();}this._enclosing.remove(this.lastEntryReturned.key);this.lastEntryReturned = null;this.expectedModCount = this._enclosing.modCount;}
public static FuzzySet CreateSetBasedOnQuality(int maxNumUniqueValues, float desiredMaxSaturation){var setSize = GetNearestSetSize(maxNumUniqueValues, desiredMaxSaturation);return new FuzzySet(new FixedBitSet(setSize + 1), setSize, HashFunctionForVersion(VERSION_CURRENT));}
public virtual DefineAnalysisSchemeResponse DefineAnalysisScheme(DefineAnalysisSchemeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DefineAnalysisSchemeRequestMarshaller.Instance;options.ResponseUnmarshaller = DefineAnalysisSchemeResponseUnmarshaller.Instance;return Invoke<DefineAnalysisSchemeResponse>(request, options);}
public bool isRegistered(){return !canonicalName.StartsWith("x-") && !canonicalName.StartsWith("X-");}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1, ValueEval arg2){AreaEval aeRange;double result;bool order = false;try{ValueEval ve = OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);result = OperandResolver.CoerceValueToDouble(ve);if (Double.IsNaN(result) || Double.IsInfinity(result)){throw new EvaluationException(ErrorEval.NUM_ERROR);}aeRange = ConvertRangeArg(arg1);ve = OperandResolver.GetSingleValue(arg2, srcRowIndex, srcColumnIndex);int order_value = OperandResolver.CoerceValueToInt(ve);if (order_value == 0){order = true;}else if (order_value == 1){order = false;}else throw new EvaluationException(ErrorEval.NUM_ERROR);}catch (EvaluationException e){return e.GetErrorEval();}return eval(srcRowIndex, srcColumnIndex, result, aeRange, order);}
public virtual DeleteCustomMetadataResponse DeleteCustomMetadata(DeleteCustomMetadataRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteCustomMetadataRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteCustomMetadataResponseUnmarshaller.Instance;return Invoke<DeleteCustomMetadataResponse>(request, options);}
public FieldInfos Finish(){return new FieldInfos(byName.Values.ToArray());}
public override ObjectId IdFor(int type, byte[] data){return Delegate().IdFor(type, data);}
public override bool Include(TreeWalk walker){int n = walker.TreeCount;if (n == 1){return true;}int m = walker.GetRawMode(0);for (int i = 1; i < n; i++){if (walker.GetRawMode(i) != m || !walker.IdEqual(i, 0)){return true;}}return false;}
public void Clear(){arrays.Clear();}
public override String ToString(){CellReference crA = new CellReference(FirstRow, FirstColumn);CellReference crB = new CellReference(LastRow, LastColumn);StringBuilder sb = new StringBuilder();sb.Append(GetType().Name).Append("[");sb.Append(_evaluator.SheetNameRange);sb.Append('!');sb.Append(crA.FormatAsString());sb.Append(':');sb.Append(crB.FormatAsString());sb.Append("]");return sb.ToString();}
public QueryParser(ICharStream stream){TokenSource = new QueryParserTokenManager(stream);Token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.Length; i++) jj_2_rtns[i] = new JJCalls();}
public bool? BooleanValue(string key){if (null != DictionaryUtil.Get(ResponseDictionary, key)){return bool.Parse(DictionaryUtil.Get(ResponseDictionary, key));}return null;}
public virtual DescribeRootFoldersResponse DescribeRootFolders(DescribeRootFoldersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRootFoldersRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRootFoldersResponseUnmarshaller.Instance;return Invoke<DescribeRootFoldersResponse>(request, options);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[PLOTAREA]\n");buffer.Append("[/PLOTAREA]\n");return buffer.ToString();}
public NamePtg CreatePtg(){return new NamePtg(_index);}
public static RevFilter After(DateTime ts){return After(ts.GetTime());}
public virtual void SetRefLogMessage(string msg, bool appendStatus){if (msg == null && !appendStatus){DisableRefLog();}else{if (msg == null && appendStatus){refLogMessage = string.Empty;refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}}
public virtual GetSendStatisticsResponse GetSendStatistics(){return GetSendStatistics(new GetSendStatisticsRequest());}
public DrillSidewaysResult(Facets facets, TopDocs hits){this.Facets = facets;this.Hits = hits;}
public override int read(byte[] buffer, int byteOffset, int byteCount){throw new System.NotImplementedException();}
public override java.nio.ByteBuffer putInt(int value){int newPosition = _position + libcore.io.SizeOf.INT;if (newPosition > _limit){throw new java.nio.BufferOverflowException();}libcore.io.Memory.pokeInt(backingArray, offset + _position, value, _order);_position = newPosition;return this;}
public GetImageLayerRequest(): base("cr", "2016-06-07", "GetImageLayer", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/layers";Method = MethodType.GET;}
public virtual DiffCommand Diff(){return new DiffCommand(repo);}
public override string ToQueryString(IEscapeQuerySyntax escapeSyntaxParser){var children = GetChildren();if (children == null || children.Count == 0)return "";StringBuilder sb = new StringBuilder();string filler = "";foreach (IQueryNode child in children){sb.Append(filler).Append(child.ToQueryString(escapeSyntaxParser));filler = " AND ";}if ((Parent != null && Parent is GroupQueryNode)|| IsRoot)return sb.ToString();elsereturn "( " + sb.ToString() + " )";}
public virtual Explanation IdfExplain(CollectionStatistics collectionStats, TermStatistics termStats){long df = termStats.DocFreq;long max = collectionStats.MaxDoc;float idf = Idf(df, max);return new Explanation(idf, "idf(docFreq=" + df + ", maxDocs=" + max + ")");}
public override bool Equals(object other){if (other == null){return false;}if (other is BytesRef){return this.BytesEquals((BytesRef)other);}return false;}
public CreateTableRequest(string tableName, List<KeySchemaElement> keySchema){_tableName = tableName;_keySchema = keySchema;}
public override bool IsEnabled(string component){return false;}
public virtual UpdatePipelineStatusResponse UpdatePipelineStatus(UpdatePipelineStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdatePipelineStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdatePipelineStatusResponseUnmarshaller.Instance;return Invoke<UpdatePipelineStatusResponse>(request, options);}
public java.nio.FloatBuffer put(float[] src){return put(src, 0, src.Length);}
public virtual PutRecordResponse PutRecord(PutRecordRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutRecordRequestMarshaller.Instance;options.ResponseUnmarshaller = PutRecordResponseUnmarshaller.Instance;return Invoke<PutRecordResponse>(request, options);}
public override string ToString(){return Term.Utf8ToString();}
public virtual Repository Open(bool mustExist){if (mustExist && !IsGitRepository(path, fs)){throw new RepositoryNotFoundException(path);}return new FileRepository(path);}
public static void SetInstance(SshSessionFactory newFactory){if (newFactory != null){INSTANCE = newFactory;}else{INSTANCE = new DefaultSshSessionFactory();}}
public static string GetInflectedFormTranslation(string s){string result;inflFormTranslations.TryGetValue(s, out result);return result;}
public virtual java.util.List<E> subList(int start, int end){lock (mutex){return new java.util.Collections.SynchronizedList<E>(list.subList(start, end), mutex);}}
public virtual E floor(E e){return backingMap.floorKey(e);}
public virtual org.xmlpull.v1.XmlSerializer newSerializer(){if (serializerClasses == null){throw new org.xmlpull.v1.XmlPullParserException("Factory initialization incomplete - has not tried "+ classNamesLocation);}if (serializerClasses.size() == 0){throw new org.xmlpull.v1.XmlPullParserException("No valid serializer classes found in "+ classNamesLocation);}java.lang.StringBuilder issues = new java.lang.StringBuilder();{for (int i = 0; i < serializerClasses.size(); i++){System.Type ppClass = (System.Type)serializerClasses.get(i);try{org.xmlpull.v1.XmlSerializer ser = (org.xmlpull.v1.XmlSerializer)System.Activator.CreateInstance(ppClass);return ser;}catch (System.Exception ex){issues.append(ppClass.FullName + ": " + ex.ToString() + "; ");}}}throw new org.xmlpull.v1.XmlPullParserException("could not create serializer: " +issues);}
public override bool contains(object o){if (!(o is java.util.MapClass.Entry<K, V>)){return false;}java.util.MapClass.Entry<object, object> e = (java.util.MapClass.Entry<object, object>)o;return this._enclosing.containsMapping(e.getKey(), e.getValue());}
public TypeTokenFilterFactory(IDictionary<string, string> args): base(args){stopTypesFiles = Require(args, "types");enablePositionIncrements = GetBoolean(args, "enablePositionIncrements", true);useWhitelist = GetBoolean(args, "useWhitelist", false);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public AutomatonQuery(Term term, Automaton automaton): base(term.Field){this.m_term = term;this.m_automaton = automaton;this.m_compiled = new CompiledAutomaton(automaton);}
public virtual AssociateS3ResourcesResponse AssociateS3Resources(AssociateS3ResourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateS3ResourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateS3ResourcesResponseUnmarshaller.Instance;return Invoke<AssociateS3ResourcesResponse>(request, options);}
public virtual CreateHITResponse CreateHIT(CreateHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateHITRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateHITResponseUnmarshaller.Instance;return Invoke<CreateHITResponse>(request, options);}
public double[] ToArray(){if (_Count < 1){return EMPTY_DOUBLE_ARRAY;}double[] result = new double[_Count];Array.Copy(_array, 0, result, 0, _Count);return result;}
public virtual void Write(char b){if (m_len >= m_buf.Length){Resize(m_len + 1);}UnsafeWrite(b);}
public virtual string DistanceSubQueryNotAllowed(){var sqi = GetSubQueriesEnumerator();while (sqi.MoveNext()){var leq = sqi.Current;if (leq is IDistanceSubQuery){var dsq = sqi.Current as IDistanceSubQuery;string m = dsq.DistanceSubQueryNotAllowed();if (m != null){return m;}}else{return "Operator " + OperatorName + " does not allow subquery " + leq.ToString();}}return null; }
public override string ToString(){StringBuilder b = new StringBuilder();AppendCharString(min, b);if (min != max){b.Append("-");AppendCharString(max, b);}b.Append(" -> ").Append(to.number);return b.ToString();}
public virtual IList<string> GetDFAStrings(){IList<string> s = new List<string>();for (int d = 0; d < Interpreter.atn.decisionToDFA.Length; d++){DFA dfa = Interpreter.atn.decisionToDFA[d];s.Add(dfa.ToString(Vocabulary));}return s;}
public void Fill(BytesRef b, long start){var index = (int)(start >> blockBits);var offset = (int)(start & blockMask);var block = b.Bytes = blocks[index];if ((block[offset] & 128) == 0){b.Length = block[offset];b.Offset = offset + 1;}else{b.Length = ((block[offset] & 0x7f) << 8) | (block[1 + offset] & 0xff);b.Offset = offset + 2;Debug.Assert(b.Length > 0);}}
public virtual DomainMetadataResponse DomainMetadata(DomainMetadataRequest request){var options = new InvokeOptions();options.RequestMarshaller = DomainMetadataRequestMarshaller.Instance;options.ResponseUnmarshaller = DomainMetadataResponseUnmarshaller.Instance;return Invoke<DomainMetadataResponse>(request, options);}
public virtual DescribeReservedDBInstancesOfferingsResponse DescribeReservedDBInstancesOfferings(DescribeReservedDBInstancesOfferingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReservedDBInstancesOfferingsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservedDBInstancesOfferingsResponseUnmarshaller.Instance;return Invoke<DescribeReservedDBInstancesOfferingsResponse>(request, options);}
public virtual int Size(){return count;}
public virtual AssociateRepositoryResponse AssociateRepository(AssociateRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateRepositoryResponseUnmarshaller.Instance;return Invoke<AssociateRepositoryResponse>(request, options);}
public override Object Clone(){ObjectProtectRecord rec = new ObjectProtectRecord();rec.field_1_protect = field_1_protect;return rec;}
public DeletedRef3DPtg(ILittleEndianInput in1){field_1_index_extern_sheet = in1.ReadUShort();unused1 = in1.ReadInt();}
public DescribeVaultRequest(string accountId, string vaultName){_accountId = accountId;_vaultName = vaultName;}
public virtual void Rewind(){ns.Clear();ks.Length = 0;cur = outerInstance.m_root;Run();}
public static bool IndexExists(Directory directory){string[] files;try{files = directory.ListAll();}#pragma warning disable 168catch (DirectoryNotFoundException nsde)#pragma warning restore 168{return false;}if (files != null){string prefix = IndexFileNames.SEGMENTS + "_";foreach (string file in files){if (file.StartsWith(prefix, StringComparison.Ordinal) || file.Equals(IndexFileNames.SEGMENTS_GEN, StringComparison.Ordinal)){return true;}}}return false;}
public virtual CreateConfigurationResponse CreateConfiguration(CreateConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationResponseUnmarshaller.Instance;return Invoke<CreateConfigurationResponse>(request, options);}
public virtual void ExportRepository(string name, Repository db){exports.Put(NameWithDotGit(name), db);}
public void close (){lock (this.mBlock) {if (this.mParseState != null) {this.mParseState.Dispose ();this.mParseState = null;this.mBlock.decOpenCountLocked ();}}}
public UserInputQueryBuilder(QueryParser parser){this.unSafeParser = parser;}
public virtual NGit.Api.BlameCommand SetFilePath(string filePath){this.path = filePath;return this;}
public virtual void SetDirCache(DirCache dc){this.dircache = dc;}
public virtual TestDNSAnswerResponse TestDNSAnswer(TestDNSAnswerRequest request){var options = new InvokeOptions();options.RequestMarshaller = TestDNSAnswerRequestMarshaller.Instance;options.ResponseUnmarshaller = TestDNSAnswerResponseUnmarshaller.Instance;return Invoke<TestDNSAnswerResponse>(request, options);}
public void SetTabIdArray(short[] array){_tabids = array;}
public virtual void println(double d){println(d.ToString());}
public virtual UpdateContainerInstancesStateResponse UpdateContainerInstancesState(UpdateContainerInstancesStateRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContainerInstancesStateRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContainerInstancesStateResponseUnmarshaller.Instance;return Invoke<UpdateContainerInstancesStateResponse>(request, options);}
public virtual PutSchemaFromJsonResponse PutSchemaFromJson(PutSchemaFromJsonRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutSchemaFromJsonRequestMarshaller.Instance;options.ResponseUnmarshaller = PutSchemaFromJsonResponseUnmarshaller.Instance;return Invoke<PutSchemaFromJsonResponse>(request, options);}
public static bool IsCellInternalDateFormatted(ICell cell){if (cell == null) return false;bool bDate = false;double d = cell.NumericCellValue;if (DateUtil.IsValidExcelDate(d)){ICellStyle style = cell.CellStyle;int i = style.DataFormat;bDate = IsInternalDateFormat(i);}return bDate;}
public StaticCredentialsProvider(AlibabaCloudCredentials credentials){this.credentials = credentials;}
public virtual IntervalSet Look(ATNState s, ATNState stopState, RuleContext ctx){IntervalSet r = new IntervalSet();bool seeThruPreds = true;PredictionContext lookContext = ctx != null ? PredictionContext.FromRuleContext(s.atn, ctx) : null;Look(s, stopState, lookContext, r, new HashSet<ATNConfig>(), new BitSet(), seeThruPreds, true);return r;}
public Lift(bool changeSkip){this.changeSkip = changeSkip;}
public virtual CreateNodeResponse CreateNode(CreateNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNodeResponseUnmarshaller.Instance;return Invoke<CreateNodeResponse>(request, options);}
public static byte[] copyOfRange(byte[] original, int start, int end){if (start > end){throw new System.ArgumentException();}int originalLength = original.Length;if (start < 0 || start > originalLength){throw new System.IndexOutOfRangeException();}int resultLength = end - start;int copyLength = System.Math.Min(resultLength, originalLength - start);byte[] result = new byte[resultLength];System.Array.Copy(original, start, result, 0, copyLength);return result;}
public static NGit.Treewalk.Filter.PathFilter Create(string path){while (path.EndsWith("/")){path = Sharpen.Runtime.Substring(path, 0, path.Length - 1);}if (path.Length == 0){throw new ArgumentException(JGitText.Get().emptyPathNotPermitted);}return new NGit.Treewalk.Filter.PathFilter(path);}
public virtual DescribeVolumesResponse DescribeVolumes(){return DescribeVolumes(new DescribeVolumesRequest());}
public ListTopicsRequest(string nextToken){_nextToken = nextToken;}
public override string ToString(){return "G";}
public virtual java.util.SortedSet<E> tailSet(E start){return tailSet(start, true);}
public String GetSheetName(int sheetIndex){return GetSheetEvaluator(sheetIndex).SheetName;}
public void VerifyBelongsToWorkbook(HSSFWorkbook wb){if (wb.Workbook != _workbook){throw new ArgumentException("This Style does not belong to the supplied Workbook. Are you trying to assign a style from one workbook to the cell of a differnt workbook?");}}
public OffsetLimitTokenFilter(TokenStream input, int offsetLimit) : base(input){this.offsetLimit = offsetLimit;offsetAttrib = GetAttribute<IOffsetAttribute>();}
public virtual int size(){return mSize;}
public virtual SetDesiredCapacityResponse SetDesiredCapacity(SetDesiredCapacityRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetDesiredCapacityRequestMarshaller.Instance;options.ResponseUnmarshaller = SetDesiredCapacityResponseUnmarshaller.Instance;return Invoke<SetDesiredCapacityResponse>(request, options);}
public virtual DeleteVpcResponse DeleteVpc(DeleteVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVpcResponseUnmarshaller.Instance;return Invoke<DeleteVpcResponse>(request, options);}
public static int CompareArrayByPrefix(char[] shortArray, int shortIndex,char[] longArray, int longIndex){if (shortArray == null)return 0;else if (longArray == null)return (shortIndex < shortArray.Length) ? 1 : 0;int si = shortIndex, li = longIndex;while (si < shortArray.Length && li < longArray.Length&& shortArray[si] == longArray[li]){si++;li++;}if (si == shortArray.Length){return 0;}else{if (li == longArray.Length)return 1;elsereturn (shortArray[si] > longArray[li]) ? 1 : -1;}}
public static string StripExtension(string filename){int idx = filename.IndexOf('.');if (idx != -1){filename = filename.Substring(0, idx);}return filename;}
public bool HasDirectoryEntry(){EmbeddedObjectRefSubRecord subRecord = FindObjectRecord();int? streamId = subRecord.StreamId;return streamId != null && streamId != 0;}
public static int idealShortArraySize(int need){return idealByteArraySize(need * 2) / 2;}
public CreateLoadBalancerListenersRequest(string loadBalancerName, List<Listener> listeners){_loadBalancerName = loadBalancerName;_listeners = listeners;}
public virtual void SetRate(int rate, bool perMin){this.rate = rate;this.perMin = perMin;SetSequenceName();}
public virtual ModifyInstanceEventStartTimeResponse ModifyInstanceEventStartTime(ModifyInstanceEventStartTimeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyInstanceEventStartTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyInstanceEventStartTimeResponseUnmarshaller.Instance;return Invoke<ModifyInstanceEventStartTimeResponse>(request, options);}
public virtual void remove(){object[] a = this._enclosing.array;int removalIdx = this.removalIndex;if (this._enclosing.modCount != this.expectedModCount){throw new java.util.ConcurrentModificationException();}if (removalIdx < 0){throw new System.InvalidOperationException();}System.Array.Copy(a, removalIdx + 1, a, removalIdx, this.remaining);a[--this._enclosing._size] = null;this.removalIndex = -1;this.expectedModCount = ++this._enclosing.modCount;}
public virtual UpdateWorkteamResponse UpdateWorkteam(UpdateWorkteamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateWorkteamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateWorkteamResponseUnmarshaller.Instance;return Invoke<UpdateWorkteamResponse>(request, options);}
public override java.nio.ByteBuffer putLong(long value){throw new java.nio.ReadOnlyBufferException();}
public override String ToFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append("<=");buffer.Append(operands[1]);return buffer.ToString();}
public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 56; shift >= 0; shift -= 8){values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 255);}}}
public virtual GetCheckerIpRangesResponse GetCheckerIpRanges(GetCheckerIpRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCheckerIpRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCheckerIpRangesResponseUnmarshaller.Instance;return Invoke<GetCheckerIpRangesResponse>(request, options);}
public override string ToString(){StringBuilder sb = new StringBuilder();sb.Append("TrackingRefUpdate[");sb.Append(remoteName);sb.Append(" -> ");sb.Append(localName);if (forceUpdate){sb.Append(" (forced)");}sb.Append(" ");sb.Append(oldObjectId == null ? string.Empty : oldObjectId.Abbreviate(7).Name);sb.Append("..");sb.Append(newObjectId == null ? string.Empty : newObjectId.Abbreviate(7).Name);sb.Append("]");return sb.ToString();}
public virtual FuzzySet Downsize(float targetMaxSaturation){var numBitsSet = _filter.Cardinality();FixedBitSet rightSizedBitSet;var rightSizedBitSetSize = _bloomSize;foreach (var candidateBitsetSize in from candidateBitsetSize in _usableBitSetSizeslet candidateSaturation = numBitsSet /(float) candidateBitsetSizewhere candidateSaturation <= targetMaxSaturationselect candidateBitsetSize){rightSizedBitSetSize = candidateBitsetSize;break;}if (rightSizedBitSetSize < _bloomSize){rightSizedBitSet = new FixedBitSet(rightSizedBitSetSize + 1);var bitIndex = 0;do{bitIndex = _filter.NextSetBit(bitIndex);if (bitIndex < 0) continue;var downSizedBitIndex = bitIndex & rightSizedBitSetSize;rightSizedBitSet.Set(downSizedBitIndex);bitIndex++;} while ((bitIndex >= 0) && (bitIndex <= _bloomSize));}else{return null;}return new FuzzySet(rightSizedBitSet, rightSizedBitSetSize, _hashFunction);}
public virtual SendMessagesResponse SendMessages(SendMessagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = SendMessagesRequestMarshaller.Instance;options.ResponseUnmarshaller = SendMessagesResponseUnmarshaller.Instance;return Invoke<SendMessagesResponse>(request, options);}
public virtual GetResolverEndpointResponse GetResolverEndpoint(GetResolverEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetResolverEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = GetResolverEndpointResponseUnmarshaller.Instance;return Invoke<GetResolverEndpointResponse>(request, options);}
public override void Write(byte[] buf, int off, int len){try{BeginWrite();dst.Write(buf, off, len);}catch (ThreadInterruptedException){throw WriteTimedOut();}finally{EndWrite();}}
public virtual bool IsDryRun(){return dryRun;}
public virtual AcceptQualificationRequestResponse AcceptQualificationRequest(AcceptQualificationRequestRequest request){var options = new InvokeOptions();options.RequestMarshaller = AcceptQualificationRequestRequestMarshaller.Instance;options.ResponseUnmarshaller = AcceptQualificationRequestResponseUnmarshaller.Instance;return Invoke<AcceptQualificationRequestResponse>(request, options);}
public virtual void Reset(){upto = 0;@in.Reset();}
public BarRecord(RecordInputStream in1){field_1_barSpace = in1.ReadShort();field_2_categorySpace = in1.ReadShort();field_3_formatFlags = in1.ReadShort();}
public int GetDecimalExponent(){return _relativeDecimalExponent + EXPONENT_OFFSET;}
public override string ToString(){return "NO_MERGES";}
public override ConstantScoreQuery MakeQuery(SpatialArgs args){if (!SpatialOperation.Is(args.Operation,SpatialOperation.Intersects,SpatialOperation.IsWithin)){throw new UnsupportedSpatialOperation(args.Operation);}IShape shape = args.Shape;if (shape is IRectangle){var bbox = (IRectangle)shape;return new ConstantScoreQuery(MakeWithin(bbox));}else if (shape is ICircle){var circle = (ICircle)shape;var bbox = circle.BoundingBox;var vsf = new ValueSourceFilter(new QueryWrapperFilter(MakeWithin(bbox)),MakeDistanceValueSource(circle.Center),0,circle.Radius);return new ConstantScoreQuery(vsf);}throw new NotSupportedException("Only IRectangles and ICircles are currently supported, " +"found [" + shape.GetType().Name + "]"); }
public FieldDoc(int doc, float score, object[] fields, int shardIndex): base(doc, score, shardIndex){this.fields = fields;}
public SimpleBoundaryScanner(int maxScan, ISet<char> boundaryChars){this.m_maxScan = maxScan;this.m_boundaryChars = boundaryChars;}
public virtual PutLifecycleHookResponse PutLifecycleHook(PutLifecycleHookRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleHookRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleHookResponseUnmarshaller.Instance;return Invoke<PutLifecycleHookResponse>(request, options);}
public virtual ListSignalingChannelsResponse ListSignalingChannels(ListSignalingChannelsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListSignalingChannelsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListSignalingChannelsResponseUnmarshaller.Instance;return Invoke<ListSignalingChannelsResponse>(request, options);}
public override TokenStream Create(TokenStream input){#pragma warning disable 612, 618var filter = new LengthFilter(m_luceneMatchVersion, enablePositionIncrements, input, min, max);#pragma warning restore 612, 618return filter;}
public virtual DisassociateMembershipResponse DisassociateMembership(DisassociateMembershipRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateMembershipRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateMembershipResponseUnmarshaller.Instance;return Invoke<DisassociateMembershipResponse>(request, options);}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE){int number;try{number = OperandResolver.CoerceValueToInt(numberVE);}catch (EvaluationException){return ErrorEval.VALUE_INVALID;}if (number < 0){return ErrorEval.NUM_ERROR;}return new NumberEval(factorial(number).LongValue());}
public virtual UpdateFleetPortSettingsResponse UpdateFleetPortSettings(UpdateFleetPortSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateFleetPortSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateFleetPortSettingsResponseUnmarshaller.Instance;return Invoke<UpdateFleetPortSettingsResponse>(request, options);}
public virtual E poll(){return _size == 0 ? default(E) : removeFirst();}
public int GetLastInternalSheetIndexForExtIndex(int extRefIndex){if (extRefIndex >= _externSheetRecord.NumOfRefs || extRefIndex < 0){return -1;}return _externSheetRecord.GetLastSheetIndexFromRefIndex(extRefIndex);}
public virtual CharBlockArray Append(ICharSequence chars, int start, int length){int end = start + length;for (int i = start; i < end; i++){Append(chars[i]);}return this;}
public virtual NGit.Api.TagCommand SetForceUpdate(bool forceUpdate){this.forceUpdate = forceUpdate;return this;}
public ValueEval GetRefEval(int rowIndex, int columnIndex){SheetRangeEvaluator sre = GetRefEvaluatorForCurrentSheet();return new LazyRefEval(rowIndex, columnIndex, sre);}
public void set(E @object){iterator.set(@object);}
public virtual GetInstancePortStatesResponse GetInstancePortStates(GetInstancePortStatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInstancePortStatesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInstancePortStatesResponseUnmarshaller.Instance;return Invoke<GetInstancePortStatesResponse>(request, options);}
public ModifyImageAttributeRequest(string imageId, string attribute){_imageId = imageId;_attribute = attribute;}
public void NotifySetFormula(ICell cell){_bookEvaluator.NotifyUpdateCell(new HSSFEvaluationCell(cell));}
public void DumpDrawingGroupRecords(bool fat){DrawingGroupRecord r = (DrawingGroupRecord)workbook.FindFirstRecordBySid(DrawingGroupRecord.sid);r.Decode();IList escherRecords = r.EscherRecords;for (IEnumerator iterator = escherRecords.GetEnumerator(); iterator.MoveNext(); ){EscherRecord escherRecord = (EscherRecord)iterator.Current;if (fat)Console.WriteLine(escherRecord.ToString());elseescherRecord.Display(0);}}
public DeleteTagsRequest(List<string> resources){_resources = resources;}
public static RepositoryCache.FileKey Lenient(FilePath directory, FS fs){FilePath gitdir = Resolve(directory, fs);return new RepositoryCache.FileKey(gitdir != null ? gitdir : directory, fs);}
public ObjectLoader Open(DiffEntry.Side side, DiffEntry ent){switch (side){case DiffEntry.Side.OLD:{return oldSource.Open(ent.oldPath, ent.oldId.ToObjectId());}case DiffEntry.Side.NEW:{return newSource.Open(ent.newPath, ent.newId.ToObjectId());}default:{throw new ArgumentException();}}}
public virtual int GetRenameScore(){return currentSource.renameScore;}
public virtual StopTrainingEntityRecognizerResponse StopTrainingEntityRecognizer(StopTrainingEntityRecognizerRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTrainingEntityRecognizerRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTrainingEntityRecognizerResponseUnmarshaller.Instance;return Invoke<StopTrainingEntityRecognizerResponse>(request, options);}
public HashMap(){table = (java.util.HashMap.HashMapEntry<K, V>[])EMPTY_TABLE;threshold = -1;}
public int PeekNextSid(){if (!HasNext()){return -1;}return ((Record)_list[_nextIndex]).Sid;}
public virtual int codePointBefore(int index){if (index < 1 || index > count){throw indexAndLength(index);}return Sharpen.CharHelper.CodePointBefore(value, index);}
public virtual BatchGetDeploymentTargetsResponse BatchGetDeploymentTargets(BatchGetDeploymentTargetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchGetDeploymentTargetsRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchGetDeploymentTargetsResponseUnmarshaller.Instance;return Invoke<BatchGetDeploymentTargetsResponse>(request, options);}
public virtual int DefineDecisionState(DecisionState s){decisionToState.Add(s);s.decision = decisionToState.Count - 1;decisionToDFA = Arrays.CopyOf(decisionToDFA, decisionToState.Count);decisionToDFA[decisionToDFA.Length - 1] = new DFA(s, s.decision);return s.decision;}
public virtual DescribeReservedNodesResponse DescribeReservedNodes(){return DescribeReservedNodes(new DescribeReservedNodesRequest());}
public virtual IList<string> GetUntrackedFolders(){List<string> ret = new List<string>(untrackedFolders);if (!untrackedParentFolders.IsEmpty()){string toBeAdded = untrackedParentFolders.GetLast();while (!ret.IsEmpty() && ret.GetLast().StartsWith(toBeAdded)){ret.RemoveLast();}ret.AddLast(toBeAdded);}return ret;}
public String ToFormulaString(IFormulaRenderingWorkbook book){return ExternSheetNameResolver.PrependSheetName(book, field_1_index_extern_sheet,HSSFErrorConstants.GetText(HSSFErrorConstants.ERROR_REF));}
public override object[] toArray(){lock (this._enclosing){return base.toArray();}}
public virtual DeleteTrafficPolicyInstanceResponse DeleteTrafficPolicyInstance(DeleteTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTrafficPolicyInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTrafficPolicyInstanceResponseUnmarshaller.Instance;return Invoke<DeleteTrafficPolicyInstanceResponse>(request, options);}
public virtual CreateHITTypeResponse CreateHITType(CreateHITTypeRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateHITTypeRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateHITTypeResponseUnmarshaller.Instance;return Invoke<CreateHITTypeResponse>(request, options);}
public virtual DeregisterTypeResponse DeregisterType(DeregisterTypeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTypeRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTypeResponseUnmarshaller.Instance;return Invoke<DeregisterTypeResponse>(request, options);}
public FeatProtection(RecordInputStream in1){fSD = in1.ReadInt();passwordVerifier = in1.ReadInt();title = StringUtil.ReadUnicodeString(in1);securityDescriptor = in1.ReadRemainder();}
public virtual DescribeReservedCacheNodesResponse DescribeReservedCacheNodes(DescribeReservedCacheNodesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReservedCacheNodesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservedCacheNodesResponseUnmarshaller.Instance;return Invoke<DescribeReservedCacheNodesResponse>(request, options);}
public virtual DescribeSubnetsResponse DescribeSubnets(DescribeSubnetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSubnetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSubnetsResponseUnmarshaller.Instance;return Invoke<DescribeSubnetsResponse>(request, options);}
public virtual RevokeClusterSecurityGroupIngressResponse RevokeClusterSecurityGroupIngress(RevokeClusterSecurityGroupIngressRequest request){var options = new InvokeOptions();options.RequestMarshaller = RevokeClusterSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = RevokeClusterSecurityGroupIngressResponseUnmarshaller.Instance;return Invoke<RevokeClusterSecurityGroupIngressResponse>(request, options);}
public NorwegianLightStemFilterFactory(IDictionary<string, string> args): base(args){string variant = Get(args, "variant");if (variant == null || "nb".Equals(variant, StringComparison.Ordinal)){flags = NorwegianStandard.BOKMAAL;}else if ("nn".Equals(variant, StringComparison.Ordinal)){flags = NorwegianStandard.NYNORSK;}else if ("no".Equals(variant, StringComparison.Ordinal)){flags = NorwegianStandard.BOKMAAL | NorwegianStandard.NYNORSK;}else{throw new System.ArgumentException("invalid variant: " + variant);}if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual SendUsersMessagesResponse SendUsersMessages(SendUsersMessagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = SendUsersMessagesRequestMarshaller.Instance;options.ResponseUnmarshaller = SendUsersMessagesResponseUnmarshaller.Instance;return Invoke<SendUsersMessagesResponse>(request, options);}
public static double pv(double r, double n, double y, double f, bool t){double retval = 0;if (r == 0){retval = -1 * ((n * y) + f);}else{double r1 = r + 1;retval = (((1 - Math.Pow(r1, n)) / r) * (t ? r1 : 1) * y - f)/Math.Pow(r1, n);}return retval;}
public DictionaryCompoundWordTokenFilterFactory(IDictionary<string, string> args): base(args){AssureMatchVersion();dictFile = Require(args, "dictionary");minWordSize = GetInt32(args, "minWordSize", CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE);minSubwordSize = GetInt32(args, "minSubwordSize", CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE);maxSubwordSize = GetInt32(args, "maxSubwordSize", CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE);onlyLongestMatch = GetBoolean(args, "onlyLongestMatch", true);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual void Reset(byte[] bytes, int offset, int len){this.bytes = bytes;pos = offset;limit = offset + len;}
public virtual DeleteQueryLoggingConfigResponse DeleteQueryLoggingConfig(DeleteQueryLoggingConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteQueryLoggingConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteQueryLoggingConfigResponseUnmarshaller.Instance;return Invoke<DeleteQueryLoggingConfigResponse>(request, options);}
public virtual StartDocumentTextDetectionResponse StartDocumentTextDetection(StartDocumentTextDetectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartDocumentTextDetectionRequestMarshaller.Instance;options.ResponseUnmarshaller = StartDocumentTextDetectionResponseUnmarshaller.Instance;return Invoke<StartDocumentTextDetectionResponse>(request, options);}
public override TokenStream Create(TokenStream input){if (words == null){return input;}else{#pragma warning disable 612, 618TokenStream filter = new KeepWordFilter(m_luceneMatchVersion, enablePositionIncrements, input, words);#pragma warning restore 612, 618return filter;}}
public virtual CreateStreamingDistributionWithTagsResponse CreateStreamingDistributionWithTags(CreateStreamingDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionWithTagsResponse>(request, options);}
public ThrowingPrintWriter(TextWriter @out){this.@out = @out;LF = AccessController.DoPrivileged(new _PrivilegedAction_69());}
public SinkTokenStream NewSinkTokenStream(){return NewSinkTokenStream(ACCEPT_ALL_FILTER);}
public override string ToString(){return ToString("");}
public virtual CreateVpnGatewayResponse CreateVpnGateway(CreateVpnGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnGatewayResponseUnmarshaller.Instance;return Invoke<CreateVpnGatewayResponse>(request, options);}
public virtual bool IsRetainBody(){return retainBody;}
public CharVector(char[] a, int capacity){if (capacity > 0){blockSize = capacity;}else{blockSize = DEFAULT_BLOCK_SIZE;}array = a;n = a.Length;}
public IList<string> GetFooterLines(FooterKey keyName){IList<FooterLine> src = GetFooterLines();if (src.IsEmpty()){return Sharpen.Collections.EmptyList<string>();}AList<string> r = new AList<string>(src.Count);foreach (FooterLine f in src){if (f.Matches(keyName)){r.AddItem(f.GetValue());}}return r;}
public Object[][] GetTokenArrayValues(){if (_arrayValues == null){throw new InvalidOperationException("array values not read yet");}Object[][] result = new Object[_nRows][];for (int r = 0; r < _nRows; r++){result[r] = new object[_nColumns];for (int c = 0; c < _nColumns; c++){result[r][c] = _arrayValues[GetValueIndex(c, r)];}}return result;}
public java.lang.StringBuilder insert(int offset, float f){insert0(offset, System.Convert.ToString(f));return this;}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 6)) & 3;values[valuesOffset++] = ((int)((uint)block >> 4)) & 3;values[valuesOffset++] = ((int)((uint)block >> 2)) & 3;values[valuesOffset++] = block & 3;}}
public static TokenizerFactory ForName(string name, IDictionary<string, string> args){return loader.NewInstance(name, args);}
public override string ToString(){return markedUpText.ToString(TextStartPos, TextEndPos - TextStartPos);}
public FormatAndBits(Format format, int bitsPerValue){this.Format = format;this.BitsPerValue = bitsPerValue;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(field_1_horizontalAlignment);out1.WriteByte(field_2_verticalAlignment);out1.WriteShort(field_3_DisplayMode);out1.WriteInt(field_4_rgbColor);out1.WriteInt(field_5_x);out1.WriteInt(field_6_y);out1.WriteInt(field_7_width);out1.WriteInt(field_8_height);out1.WriteShort(field_9_options1);out1.WriteShort(field_10_IndexOfColorValue);out1.WriteShort(field_11_options2);out1.WriteShort(field_12_textRotation);}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){double result;if (arg0 is RefEval){result = CountUtils.CountMatchingCellsInRef((RefEval)arg0, predicate);}else if (arg0 is ThreeDEval){result = CountUtils.CountMatchingCellsInArea((ThreeDEval)arg0, predicate);}else{throw new ArgumentException("Bad range arg type (" + arg0.GetType().Name + ")");}return new NumberEval(result);}
public virtual long GetEntryLastModified(){return Current().GetLastModified();}
public override bool Equals(Object obj){Loc other = (Loc)obj;return _bookSheetColumn == other._bookSheetColumn && _rowIndex == other._rowIndex;}
public virtual void readFully(byte[] dst, int offset, int byteCount){throw new System.NotImplementedException();}
public virtual CreateDBInstanceReadReplicaResponse CreateDBInstanceReadReplica(CreateDBInstanceReadReplicaRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBInstanceReadReplicaRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBInstanceReadReplicaResponseUnmarshaller.Instance;return Invoke<CreateDBInstanceReadReplicaResponse>(request, options);}
public virtual IList<IgnoreRule> GetRules(){return Sharpen.Collections.UnmodifiableList(rules);}
public virtual void SetBytesValue(BytesRef value){if (!(FieldsData is BytesRef)){throw new System.ArgumentException("cannot change value type from " + FieldsData.GetType().Name + " to BytesRef");}if (m_type.IsIndexed){throw new System.ArgumentException("cannot set a BytesRef value on an indexed field");}FieldsData = value;}
public override object Merge(object first, object second){IList<T> outputList = new JCG.List<T>();if (!(first is IList<T> firstList)){outputList.Add((T)first);}else{foreach (T value in firstList){outputList.Add(value);}}if (!(second is IList<T> secondList)){outputList.Add((T)second);}else{foreach (T value in secondList){outputList.Add(value);}}return outputList;}
public virtual UpdateApplicationResponse UpdateApplication(UpdateApplicationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApplicationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApplicationResponseUnmarshaller.Instance;return Invoke<UpdateApplicationResponse>(request, options);}
public virtual UpdateDocumentationPartResponse UpdateDocumentationPart(UpdateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDocumentationPartResponseUnmarshaller.Instance;return Invoke<UpdateDocumentationPartResponse>(request, options);}
public virtual void remove(){if (this.lastEntryReturned == null){throw new System.InvalidOperationException();}if (this._enclosing.modCount != this.expectedModCount){throw new java.util.ConcurrentModificationException();}this._enclosing.remove(this.lastEntryReturned.key);this.lastEntryReturned = null;this.expectedModCount = this._enclosing.modCount;}
public virtual GetMetricStatisticsResponse GetMetricStatistics(GetMetricStatisticsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetMetricStatisticsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetMetricStatisticsResponseUnmarshaller.Instance;return Invoke<GetMetricStatisticsResponse>(request, options);}
public virtual void writeLong(long val){throw new System.NotImplementedException();}
public virtual void Assume(RevCommit c){if (c != null){assume.AddItem(c);}}
public int AddConditionalFormatting(IConditionalFormatting cf){CFRecordsAggregate cfraClone = ((HSSFConditionalFormatting)cf).CFRecordsAggregate.CloneCFAggregate();return _conditionalFormattingTable.Add(cfraClone);}
public virtual BlameCommand Blame(){return new BlameCommand(repo);}
public override bool Equals(object obj){if (obj == this){return true;}else{if (!(obj is Antlr4.Runtime.Atn.LexerCustomAction)){return false;}}Antlr4.Runtime.Atn.LexerCustomAction other = (Antlr4.Runtime.Atn.LexerCustomAction)obj;return ruleIndex == other.ruleIndex && actionIndex == other.actionIndex;}
public BRAIRecord GetDataSecondaryCategoryLabels(){return dataSecondaryCategoryLabels;}
public SimpleHTMLFormatter(string preTag, string postTag){this.preTag = preTag;this.postTag = postTag;}
public override String ToString(){StringBuilder buffer = new StringBuilder("[ArrayPtg]\n");buffer.Append("columns = ").Append(ColumnCount).Append("\n");buffer.Append("rows = ").Append(RowCount).Append("\n");for (int x = 0; x < ColumnCount; x++){for (int y = 0; y < RowCount; y++){Object o = _arrayValues.GetValue(GetValueIndex(x, y));buffer.Append("[").Append(x).Append("][").Append(y).Append("] = ").Append(o).Append("\n");}}return buffer.ToString();}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_formatIndex);}
public override java.nio.IntBuffer get(int[] dst, int dstOffset, int intCount){byteBuffer.limit(_limit * libcore.io.SizeOf.INT);byteBuffer.position(_position * libcore.io.SizeOf.INT);if (byteBuffer is java.nio.DirectByteBuffer){((java.nio.DirectByteBuffer)byteBuffer).get(dst, dstOffset, intCount);}else{((java.nio.HeapByteBuffer)byteBuffer).get(dst, dstOffset, intCount);}this._position += intCount;return this;}
public static RevFilter Has(RevFlag a){RevFlagSet s = new RevFlagSet();s.AddItem(a);return new RevFlagFilter.HasAll(s);}
public ThaiTokenizerFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public NameXPxg(int externalWorkbookNumber, String sheetName, String nameName){this.externalWorkbookNumber = externalWorkbookNumber;this.sheetName = sheetName;this.nameName = nameName;}
public CreatePlacementGroupRequest(string groupName, PlacementStrategy strategy){_groupName = groupName;_strategy = strategy;}
public override string ToString(){return "PackWriter.State[" + this.phase + ", memory=" + this.bytesUsed + "]";}
public virtual GetCampaignVersionResponse GetCampaignVersion(GetCampaignVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCampaignVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCampaignVersionResponseUnmarshaller.Instance;return Invoke<GetCampaignVersionResponse>(request, options);}
public virtual CreateBranchCommand BranchCreate(){return new CreateBranchCommand(repo);}
public static RevFilter Before(DateTime ts){return Before(ts.GetTime());}
public ValueEval GetArea3DEval(Area3DPxg aptg){SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(aptg.SheetName, aptg.LastSheetName, aptg.ExternalWorkbookNumber);return new LazyAreaEval(aptg.FirstRow, aptg.FirstColumn,aptg.LastRow, aptg.LastColumn, sre);}
public virtual void SetDeltaSearchWindowSize(int objectCount){if (objectCount <= 2){SetDeltaCompress(false);}else{deltaSearchWindowSize = objectCount;}}
public override java.nio.CharBuffer put(int index, char c){checkIndex(index);backingArray[offset + index] = c;return this;}
public override java.io.Writer append(java.lang.CharSequence csq){if (csq == null){csq = java.lang.CharSequenceProxy.Wrap("null");}write(csq.ToString());return this;}
public virtual void SetDoubleValue(double value){if (!(FieldsData is Double)){throw new System.ArgumentException("cannot change value type from " + FieldsData.GetType().Name + " to Double");}FieldsData = new Double(value);}
public override TokenStream Create(TokenStream input){try{NLPLemmatizerOp lemmatizerOp = OpenNLPOpsFactory.GetLemmatizer(dictionaryFile, lemmatizerModelFile);return new OpenNLPLemmatizerFilter(input, lemmatizerOp);}catch (IOException e){throw new Exception(e.ToString(), e);}}
public int GetBigBlockSize(){return bigBlockSize;}
public virtual CompleteLifecycleActionResponse CompleteLifecycleAction(CompleteLifecycleActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteLifecycleActionRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteLifecycleActionResponseUnmarshaller.Instance;return Invoke<CompleteLifecycleActionResponse>(request, options);}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE, ValueEval formVE){int number = 0;try{ValueEval ve = OperandResolver.GetSingleValue(numberVE, srcRowIndex, srcColumnIndex);number = OperandResolver.CoerceValueToInt(ve);}catch (EvaluationException){return ErrorEval.VALUE_INVALID;}if (number < 0){return ErrorEval.VALUE_INVALID;}if (number > 3999){return ErrorEval.VALUE_INVALID;}if (number == 0){return new StringEval("");}int form = 0;try{ValueEval ve = OperandResolver.GetSingleValue(formVE, srcRowIndex, srcColumnIndex);form = OperandResolver.CoerceValueToInt(ve);}catch (EvaluationException){return ErrorEval.NUM_ERROR;}if (form > 4 || form < 0){return ErrorEval.VALUE_INVALID;}String result = this.integerToRoman(number);if (form == 0){return new StringEval(result);}return new StringEval(MakeConcise(result, form));}
public int getIndex(){return offset;}
public virtual GetRelationalDatabaseSnapshotsResponse GetRelationalDatabaseSnapshots(GetRelationalDatabaseSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRelationalDatabaseSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRelationalDatabaseSnapshotsResponseUnmarshaller.Instance;return Invoke<GetRelationalDatabaseSnapshotsResponse>(request, options);}
public override void Decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2){values[valuesOffset++] = ((long)((ulong)block >> shift)) & 3;}}}
public SaveRecalcRecord(RecordInputStream in1){field_1_recalc = in1.ReadShort();}
public Credential(string keyId, string secret){AccessKeyId = keyId;AccessSecret = secret;RefreshDate = DateTime.UtcNow;}
public virtual ListJobsResponse ListJobs(){return ListJobs(new ListJobsRequest());}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){ValueEval arg = arg0;if (arg is RefEval){RefEval re = (RefEval)arg;arg = re.GetInnerValueEval(re.FirstSheetIndex);}else if (arg is AreaEval){arg = ((AreaEval)arg).GetRelativeValue(0, 0);}if (arg is StringEval){return arg;}if (arg is ErrorEval){return arg;}return StringEval.EMPTY_INSTANCE;}
public DelegationSet(List<string> nameServers){_nameServers = nameServers;}
public virtual Trie Reduce(Reduce by){return by.Optimize(this);}
public bool IsSupportedType(int variantType){for (int i = 0; i < SUPPORTED_TYPES.Length; i++)if (variantType == SUPPORTED_TYPES[i])return true;return false;}
public override TokenStream Create(TokenStream input){return new SwedishLightStemFilter(input);}
public override string ToString(){return this.GetType().Name + '@' + GetHashCode().ToString("x") + " lockFactory=" + LockFactory;}
public static int GetEncodedSize(Ptg[] ptgs){int result = 0;for (int i = 0; i < ptgs.Length; i++){result += ptgs[i].Size;}return result;}
public Azure.Storage.Files.Shares.Models.FileProperty Properties { get; internal set; }
public void CloneStyleFrom(FontRecord source){field_1_font_height = source.field_1_font_height;field_2_attributes = source.field_2_attributes;field_3_color_palette_index = source.field_3_color_palette_index;field_4_bold_weight = source.field_4_bold_weight;field_5_base_sub_script = source.field_5_base_sub_script;field_6_underline = source.field_6_underline;field_7_family = source.field_7_family;field_8_charset = source.field_8_charset;field_9_zero = source.field_9_zero;field_11_font_name = source.field_11_font_name;}
public virtual CreateAdditionalAssignmentsForHITResponse CreateAdditionalAssignmentsForHIT(CreateAdditionalAssignmentsForHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAdditionalAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAdditionalAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<CreateAdditionalAssignmentsForHITResponse>(request, options);}
public override bool Equals(object o){if (o is NGit.AbbreviatedObjectId){NGit.AbbreviatedObjectId b = (NGit.AbbreviatedObjectId)o;return nibbles == b.nibbles && w1 == b.w1 && w2 == b.w2 && w3 == b.w3 && w4 == b.w4 && w5 == b.w5;}return false;}
public GetRepoListRequest(): base("cr", "2016-06-07", "GetRepoList", "cr", "openAPI"){UriPattern = "/repos";Method = MethodType.GET;}
public virtual DeleteSpotDatafeedSubscriptionResponse DeleteSpotDatafeedSubscription(){return DeleteSpotDatafeedSubscription(new DeleteSpotDatafeedSubscriptionRequest());}
public virtual bool IsSupported(int bitsPerValue){return bitsPerValue >= 1 && bitsPerValue <= 64;}
public UpdateApplicationVersionRequest(string applicationName, string versionLabel){_applicationName = applicationName;_versionLabel = versionLabel;}
public virtual NGit.Api.RebaseCommand SetUpstream(AnyObjectId upstream){try{this.upstreamCommit = walk.ParseCommit(upstream);this.upstreamCommitName = upstream.Name;}catch (IOException e){throw new JGitInternalException(MessageFormat.Format(JGitText.Get().couldNotReadObjectWhileParsingCommit, upstream.Name), e);}return this;}
public char next(){if (offset >= (end - 1)){offset = end;return java.text.CharacterIteratorClass.DONE;}return @string[++offset];}
public virtual long GetOffset(){return offset;}
public override string ToString(){string inv = invert ? "!" : string.Empty;return GetType().Name + "[" + inv + nodeName + "]";}
public virtual TagMeetingResponse TagMeeting(TagMeetingRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagMeetingRequestMarshaller.Instance;options.ResponseUnmarshaller = TagMeetingResponseUnmarshaller.Instance;return Invoke<TagMeetingResponse>(request, options);}
public HSSFShape(EscherContainerRecord spContainer, ObjRecord objRecord){this._escherContainer = spContainer;this._objRecord = objRecord;this._optRecord = (EscherOptRecord)spContainer.GetChildById(EscherOptRecord.RECORD_ID);this.anchor = HSSFAnchor.CreateAnchorFromEscher(spContainer);}
public java.util.regex.Matcher region(int start_1, int end_1){return reset(java.lang.CharSequenceProxy.Wrap(input), start_1, end_1);}
public virtual GetVoiceConnectorTerminationHealthResponse GetVoiceConnectorTerminationHealth(GetVoiceConnectorTerminationHealthRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorTerminationHealthRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorTerminationHealthResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorTerminationHealthResponse>(request, options);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_precision);}
public Principal(string accountId): this(AWS_PROVIDER, accountId){if (accountId == null){throw new ArgumentNullException("accountId");}}
public AddImageRequest(): base("ImageSearch", "2019-03-25", "AddImage", "imagesearch", "openAPI"){UriPattern = "/v2/image/add";Method = MethodType.POST;}
public virtual void FromObjectId(AnyObjectId src){this.w1 = src.w1;this.w2 = src.w2;this.w3 = src.w3;this.w4 = src.w4;this.w5 = src.w5;}
public static String GetText(int errorCode){if (FormulaError.IsValidCode(errorCode)){return FormulaError.ForInt(errorCode).String;}return "~non~std~err(" + errorCode + ")~";}
public virtual void SetBaseline(){SetBaseline(clock.Get());}
public static void ClearModels(){sentenceModels.Clear();tokenizerModels.Clear();posTaggerModels.Clear();chunkerModels.Clear();nerModels.Clear();lemmaDictionaries.Clear();}
public virtual NGit.Transport.URIish SetPort(int n){NGit.Transport.URIish r = new NGit.Transport.URIish(this);r.port = n > 0 ? n : -1;return r;}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 4)) & 15;values[valuesOffset++] = block & 15;}}
public override bool MarkSupported(){return @in.MarkSupported();}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex,ValueEval arg0, ValueEval arg1){double result;try{ValueVector vvY = CreateValueVector(arg0);ValueVector vvX = CreateValueVector(arg1);int size = vvX.Size;if (size == 0 || vvY.Size != size){return ErrorEval.NA;}result = EvaluateInternal(vvX, vvY, size);}catch (EvaluationException e){return e.GetErrorEval();}if (Double.IsNaN(result) || Double.IsInfinity(result)){return ErrorEval.NUM_ERROR;}return new NumberEval(result);}
public virtual int CompareTo(string version){long gen = long.Parse(version, NumberStyles.HexNumber);long commitGen = commit.Generation;return commitGen < gen ? -1 : (commitGen > gen ? 1 : 0);}
public override string ToString(){return "weight(" + outerInstance + ")";}
public virtual BatchGetDeploymentGroupsResponse BatchGetDeploymentGroups(BatchGetDeploymentGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchGetDeploymentGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchGetDeploymentGroupsResponseUnmarshaller.Instance;return Invoke<BatchGetDeploymentGroupsResponse>(request, options);}
public virtual TestInvokeAuthorizerResponse TestInvokeAuthorizer(TestInvokeAuthorizerRequest request){var options = new InvokeOptions();options.RequestMarshaller = TestInvokeAuthorizerRequestMarshaller.Instance;options.ResponseUnmarshaller = TestInvokeAuthorizerResponseUnmarshaller.Instance;return Invoke<TestInvokeAuthorizerResponse>(request, options);}
public virtual RevTree ParseTree(AnyObjectId id){RevObject c = Peel(ParseAny(id));RevTree t;if (c is RevCommit){t = ((RevCommit)c).Tree;}else{if (!(c is RevTree)){throw new IncorrectObjectTypeException(id.ToObjectId(), Constants.TYPE_TREE);}else{t = (RevTree)c;}}ParseHeaders(t);return t;}
public override void ParseLine(DocData docData, string line){string[] parts = new Regex("\\t").Split(line, 7);docData.ID = Convert.ToInt32(parts[0], CultureInfo.InvariantCulture);docData.Name = parts[1];string latitude = parts[4];string longitude = parts[5];docData.Body = "POINT(" + longitude + " " + latitude + ")";}
public virtual EnableEbsEncryptionByDefaultResponse EnableEbsEncryptionByDefault(EnableEbsEncryptionByDefaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableEbsEncryptionByDefaultRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableEbsEncryptionByDefaultResponseUnmarshaller.Instance;return Invoke<EnableEbsEncryptionByDefaultResponse>(request, options);}
public override bool Equals(object obj){if (this == obj){return true;}if (!(obj is SemanticContext.AND)){return false;}SemanticContext.AND other = (SemanticContext.AND)obj;return Arrays.Equals(this.opnds, other.opnds);}
public SigningCertificate(string userName, string certificateId, string certificateBody, StatusType status){_userName = userName;_certificateId = certificateId;_certificateBody = certificateBody;_status = status;}
public override int[] Init(){int[] ord = base.Init();boost = new float[ArrayUtil.Oversize(ord.Length, RamUsageEstimator.NUM_BYTES_SINGLE)];termState = new TermContext[ArrayUtil.Oversize(ord.Length, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];Debug.Assert(termState.Length >= ord.Length && boost.Length >= ord.Length);return ord;}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){int rnum;if (arg0 is AreaEval){rnum = ((AreaEval)arg0).FirstColumn;}else if (arg0 is RefEval){rnum = ((RefEval)arg0).Column;}else{return ErrorEval.VALUE_INVALID;}return new NumberEval(rnum + 1);}
public string getRawFragment(){return fragment;}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval real_num, ValueEval i_num){return this.Evaluate(srcRowIndex, srcColumnIndex, real_num, i_num, new StringEval(DEFAULT_SUFFIX));}
public virtual PutAccountDedicatedIpWarmupAttributesResponse PutAccountDedicatedIpWarmupAttributes(PutAccountDedicatedIpWarmupAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutAccountDedicatedIpWarmupAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = PutAccountDedicatedIpWarmupAttributesResponseUnmarshaller.Instance;return Invoke<PutAccountDedicatedIpWarmupAttributesResponse>(request, options);}
public void Add(int forwardId, int backwardId, int cost){this.costs[backwardId][forwardId] = (short)cost;}
public virtual DisassociateIpGroupsResponse DisassociateIpGroups(DisassociateIpGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateIpGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateIpGroupsResponseUnmarshaller.Instance;return Invoke<DisassociateIpGroupsResponse>(request, options);}
public virtual DeleteGatewayGroupResponse DeleteGatewayGroup(DeleteGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteGatewayGroupResponseUnmarshaller.Instance;return Invoke<DeleteGatewayGroupResponse>(request, options);}
public ChartFormatRecord(RecordInputStream in1){field1_x_position = in1.ReadInt();field2_y_position = in1.ReadInt();field3_width = in1.ReadInt();field4_height = in1.ReadInt();field5_grbit = in1.ReadShort();field6_icrt = in1.ReadShort();}
public virtual GetDocumentationVersionResponse GetDocumentationVersion(GetDocumentationVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentationVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentationVersionResponseUnmarshaller.Instance;return Invoke<GetDocumentationVersionResponse>(request, options);}
public virtual int Stem(char[] s, int len){Debug.Assert(s.Length >= len + 1, "this stemmer requires an oversized array of at least 1");len = plural.Apply(s, len);len = unification.Apply(s, len);len = adverb.Apply(s, len);int oldlen;do{oldlen = len;len = augmentative.Apply(s, len);} while (len != oldlen);oldlen = len;len = noun.Apply(s, len);if (len == oldlen) {len = verb.Apply(s, len);}len = vowel.Apply(s, len);for (int i = 0; i < len; i++){switch (s[i]){case 'á':s[i] = 'a';break;case 'é':case 'ê':s[i] = 'e';break;case 'í':s[i] = 'i';break;case 'ó':s[i] = 'o';break;case 'ú':s[i] = 'u';break;}}return len;}
public static void fill(float[] array, float value){{for (int i = 0; i < array.Length; i++){array[i] = value;}}}
public override java.nio.ByteBuffer putInt(int index, int value){checkIndex(index, libcore.io.SizeOf.INT);libcore.io.Memory.pokeInt(backingArray, offset + index, value, _order);return this;}
public virtual void print(long lnum){print(lnum.ToString());}
public virtual E remove(int location){lock (mutex){return list.remove(location);}}
public virtual GetMetricWidgetImageResponse GetMetricWidgetImage(GetMetricWidgetImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetMetricWidgetImageRequestMarshaller.Instance;options.ResponseUnmarshaller = GetMetricWidgetImageResponseUnmarshaller.Instance;return Invoke<GetMetricWidgetImageResponse>(request, options);}
public override SeekStatus SeekCeil(BytesRef term){throw new System.NotSupportedException();}
public virtual IList<string> GetModifiedList(){return modifiedList;}
public virtual SearchRoomsResponse SearchRooms(SearchRoomsRequest request){var options = new InvokeOptions();options.RequestMarshaller = SearchRoomsRequestMarshaller.Instance;options.ResponseUnmarshaller = SearchRoomsResponseUnmarshaller.Instance;return Invoke<SearchRoomsResponse>(request, options);}
public short GetShortRawValue(short holder){return (short)this.GetRawValue(holder);}
public virtual DescribeRulesPackagesResponse DescribeRulesPackages(DescribeRulesPackagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRulesPackagesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRulesPackagesResponseUnmarshaller.Instance;return Invoke<DescribeRulesPackagesResponse>(request, options);}
public virtual ListFargateProfilesResponse ListFargateProfiles(ListFargateProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFargateProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFargateProfilesResponseUnmarshaller.Instance;return Invoke<ListFargateProfilesResponse>(request, options);}
public virtual QueryPhraseMap GetTermMap(string term){QueryPhraseMap result;subMap.TryGetValue(term, out result);return result;}
public virtual string GetRawPath(){return rawPath;}
static public double FV(double r, int nper, double c, double pv){return FV(r, nper, c, pv, 0);}
public override int GetPositionIncrementGap(string fieldName){return GetWrappedAnalyzer(fieldName).GetPositionIncrementGap(fieldName);}
public virtual UpdateUserPhoneConfigResponse UpdateUserPhoneConfig(UpdateUserPhoneConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateUserPhoneConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateUserPhoneConfigResponseUnmarshaller.Instance;return Invoke<UpdateUserPhoneConfigResponse>(request, options);}
public virtual void SetTreeFilter(TreeFilter newFilter){AssertNotStarted();treeFilter = newFilter != null ? newFilter : TreeFilter.ALL;}
public virtual GetGatewayResponse GetGateway(GetGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponseUnmarshaller.Instance;return Invoke<GetGatewayResponse>(request, options);}
public override TokenStream Create(TokenStream input){return new GermanLightStemFilter(input);}
public Builder(): base(){lastDocID = -1;wordNum = -1;word = 0;}
public CharArrayReader(char[] buf, int offset, int length){if (offset < 0 || offset > buf.Length || length < 0 || offset + length < 0){throw new System.ArgumentException();}this.buf = buf;this.pos = offset;this.markedPos = offset;int bufferLength = buf.Length;this.count = offset + length < bufferLength ? length : bufferLength;}
public void AddBreak(int main, int subFrom, int subTo){int key = (int)main;Break region = (Break)_breakMap[key];if (region != null){region.main = main;region.subFrom = subFrom;region.subTo = subTo;}else{region = new Break(main, subFrom, subTo);_breaks.Add(region);}_breakMap[key] = region;}
public override object Subtract(object @object, object inc){return outputs.Subtract((T)@object, (T)inc);}
public virtual int Get(string name, int dflt){int[] vals;object temp;if (valByRound.TryGetValue(name, out temp) && temp != null){vals = (int[])temp;return vals[roundNumber % vals.Length];}string sval;if (!props.TryGetValue(name, out sval)){sval = dflt.ToString(CultureInfo.InvariantCulture);}if (sval.IndexOf(':') < 0){return int.Parse(sval, CultureInfo.InvariantCulture);}int k = sval.IndexOf(':');string colName = sval.Substring(0, k - 0);sval = sval.Substring(k + 1);colForValByRound[name] = colName;vals = PropToInt32Array(sval);valByRound[name] = vals;return vals[roundNumber % vals.Length];}
public override string ToString(string field){StringBuilder buffer = new StringBuilder();if (!term.Field.Equals(field, StringComparison.Ordinal)){buffer.Append(term.Field);buffer.Append(":");}buffer.Append(term.Text());buffer.Append(ToStringUtils.Boost(Boost));return buffer.ToString();}
public virtual DeleteHsmClientCertificateResponse DeleteHsmClientCertificate(DeleteHsmClientCertificateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmClientCertificateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmClientCertificateResponseUnmarshaller.Instance;return Invoke<DeleteHsmClientCertificateResponse>(request, options);}
public virtual ListAccountsResponse ListAccounts(ListAccountsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAccountsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAccountsResponseUnmarshaller.Instance;return Invoke<ListAccountsResponse>(request, options);}
public virtual ListTagsResponse ListTags(ListTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTagsResponseUnmarshaller.Instance;return Invoke<ListTagsResponse>(request, options);}
public override IList<Note> Call(){CheckCallable();IList<Note> notes = new AList<Note>();RevWalk walk = new RevWalk(repo);NoteMap map = NoteMap.NewEmptyMap();try{Ref @ref = repo.GetRef(notesRef);if (@ref != null){RevCommit notesCommit = walk.ParseCommit(@ref.GetObjectId());map = NoteMap.Read(walk.GetObjectReader(), notesCommit);}Iterator<Note> i = map.Iterator();while (i.HasNext()){notes.AddItem(i.Next());}}catch (IOException e){throw new JGitInternalException(e.Message, e);}finally{walk.Release();}return notes;}
public virtual CreateResolverEndpointResponse CreateResolverEndpoint(CreateResolverEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverEndpointResponseUnmarshaller.Instance;return Invoke<CreateResolverEndpointResponse>(request, options);}
public virtual GetManagedScalingPolicyResponse GetManagedScalingPolicy(GetManagedScalingPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetManagedScalingPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetManagedScalingPolicyResponseUnmarshaller.Instance;return Invoke<GetManagedScalingPolicyResponse>(request, options);}
public virtual IQueryNodeProcessor Set(int index, IQueryNodeProcessor processor){IQueryNodeProcessor oldProcessor = this.processors[index];this.processors[index] = processor;if (oldProcessor != processor){processor.SetQueryConfigHandler(this.queryConfig);}return oldProcessor;}
public virtual GetTransitGatewayRouteTablePropagationsResponse GetTransitGatewayRouteTablePropagations(GetTransitGatewayRouteTablePropagationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetTransitGatewayRouteTablePropagationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetTransitGatewayRouteTablePropagationsResponseUnmarshaller.Instance;return Invoke<GetTransitGatewayRouteTablePropagationsResponse>(request, options);}
public virtual GetDocumentationPartsResponse GetDocumentationParts(GetDocumentationPartsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentationPartsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentationPartsResponseUnmarshaller.Instance;return Invoke<GetDocumentationPartsResponse>(request, options);}
public virtual RegisterImageResponse RegisterImage(RegisterImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterImageRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterImageResponseUnmarshaller.Instance;return Invoke<RegisterImageResponse>(request, options);}
public virtual GetHLSStreamingSessionURLResponse GetHLSStreamingSessionURL(GetHLSStreamingSessionURLRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHLSStreamingSessionURLRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHLSStreamingSessionURLResponseUnmarshaller.Instance;return Invoke<GetHLSStreamingSessionURLResponse>(request, options);}
public override String ToString(){StringBuilder sb = new StringBuilder();sb.Append("[").Append("HEADERFOOTER").Append("] (0x");sb.Append(StringUtil.ToHexString(sid).ToUpper() + ")\n");sb.Append("  rawData=").Append(HexDump.ToHex(_rawData)).Append("\n");sb.Append("[/").Append("HEADERFOOTER").Append("]\n");return sb.ToString();}
public virtual SuspendProcessesResponse SuspendProcesses(SuspendProcessesRequest request){var options = new InvokeOptions();options.RequestMarshaller = SuspendProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = SuspendProcessesResponseUnmarshaller.Instance;return Invoke<SuspendProcessesResponse>(request, options);}
public Vector(short type){this._type = type;}
public int GetIndexOfName(String name){for (int i = 0; i < _externalNameRecords.Length; i++){if (_externalNameRecords[i].Text.Equals(name, StringComparison.OrdinalIgnoreCase)){return i;}}return -1;}
public virtual NGit.Treewalk.CanonicalTreeParser GetParent(){return (NGit.Treewalk.CanonicalTreeParser)parent;}
public virtual Query GetQuery(XmlElement e){string text = DOMUtils.GetText(e);try{Query q = null;if (unSafeParser != null){lock (unSafeParser){q = unSafeParser.Parse(text);}}else{string fieldName = DOMUtils.GetAttribute(e, "fieldName", defaultField);QueryParser parser = CreateQueryParser(fieldName, analyzer);q = parser.Parse(text);}q.Boost = DOMUtils.GetAttribute(e, "boost", 1.0f);return q;}catch (ParseException e1){throw new ParserException(e1.Message);}}
public ClassificationResult(T assignedClass, double score){_assignedClass = assignedClass;_score = score;}
public void WriteData(ByteBuffer block){block.Write(Serialize());}
public SendMessageRequest(): base("OnsMqtt", "2019-12-11", "SendMessage", "onsmqtt", "openAPI"){Method = MethodType.POST;}
public BufferedChecksumIndexInput(IndexInput main): base("BufferedChecksumIndexInput(" + main + ")"){this.main = main;this.digest = new BufferedChecksum(new CRC32());}
public virtual DeletePublishingDestinationResponse DeletePublishingDestination(DeletePublishingDestinationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePublishingDestinationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePublishingDestinationResponseUnmarshaller.Instance;return Invoke<DeletePublishingDestinationResponse>(request, options);}
public ByteArrayBackedDataSource(byte[] data, int size){this.buffer = data;this.size = size;}
public DeleteMessageBatchRequestEntry(string id, string receiptHandle){_id = id;_receiptHandle = receiptHandle;}
public override TokenStream Create(TokenStream input){return new PortugueseMinimalStemFilter(input);}
public DelimitedPayloadTokenFilterFactory(IDictionary<string, string> args): base(args){encoderClass = Require(args, ENCODER_ATTR);delimiter = GetChar(args, DELIMITER_ATTR, '|');if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual DeleteMessageResponse DeleteMessage(string queueUrl, string receiptHandle){var request = new DeleteMessageRequest();request.QueueUrl = queueUrl;request.ReceiptHandle = receiptHandle;return DeleteMessage(request);}
public SelectRequest(string selectExpression){_selectExpression = selectExpression;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(AddMenuCount);out1.WriteByte(DelMenuCount);}
public java.lang.StringBuilder append(char[] chars){append0(chars);return this;}
public override Object Clone(){return this;}
public virtual CreateLaunchTemplateResponse CreateLaunchTemplate(CreateLaunchTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateLaunchTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateLaunchTemplateResponseUnmarshaller.Instance;return Invoke<CreateLaunchTemplateResponse>(request, options);}
public virtual CreateDirectConnectGatewayAssociationProposalResponse CreateDirectConnectGatewayAssociationProposal(CreateDirectConnectGatewayAssociationProposalRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDirectConnectGatewayAssociationProposalRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDirectConnectGatewayAssociationProposalResponseUnmarshaller.Instance;return Invoke<CreateDirectConnectGatewayAssociationProposalResponse>(request, options);}
public virtual void Publish(IRevision revision){throw new NotSupportedException("this replicator implementation does not support remote publishing of revisions");}
public virtual ListPipelinesResponse ListPipelines(ListPipelinesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListPipelinesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListPipelinesResponseUnmarshaller.Instance;return Invoke<ListPipelinesResponse>(request, options);}
public override string ToString(){return base.ToString() + ": " + lockName;}
public virtual CreateResourceResponse CreateResource(CreateResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResourceResponseUnmarshaller.Instance;return Invoke<CreateResourceResponse>(request, options);}
public override string ToQueryString(IEscapeQuerySyntax escapeSyntaxParser){var children = GetChildren();if (children == null || children.Count == 0)return "";StringBuilder sb = new StringBuilder();string filler = "";foreach (IQueryNode child in children){sb.Append(filler).Append(child.ToQueryString(escapeSyntaxParser));filler = ",";}return "[TP[" + sb.ToString() + "]]";}
public virtual java.nio.LongBuffer get(long[] dst){return get(dst, 0, dst.Length);}
public virtual PutLifecycleConfigurationResponse PutLifecycleConfiguration(PutLifecycleConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleConfigurationResponseUnmarshaller.Instance;return Invoke<PutLifecycleConfigurationResponse>(request, options);}
public virtual int GetCellsVal(){int size = 0;foreach (Row row in rows)size += row.GetCellsVal();return size;}
public ListMultipartUploadsRequest(string vaultName){_vaultName = vaultName;}
public virtual DescribeChangeSetResponse DescribeChangeSet(DescribeChangeSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeChangeSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeChangeSetResponseUnmarshaller.Instance;return Invoke<DescribeChangeSetResponse>(request, options);}
public override string ToQueryString(IEscapeQuerySyntax escapeSyntaxParser){var children = GetChildren();if (children == null || children.Count == 0)return "";StringBuilder sb = new StringBuilder();string filler = "";foreach (IQueryNode child in children){sb.Append(filler).Append(child.ToQueryString(escapeSyntaxParser));filler = " ";}if ((Parent != null && Parent is GroupQueryNode)|| IsRoot)return sb.ToString();elsereturn "( " + sb.ToString() + " )";}
public virtual java.util.Collection<V> values(){lock (this){java.util.Collection<V> vs = _values;return (vs != null) ? vs : (_values = new java.util.Hashtable<K, V>.Values(this));}}
public RecursivePrefixTreeStrategy(SpatialPrefixTree grid, string fieldName): base(grid, fieldName, true) {prefixGridScanLevel = grid.MaxLevels - 4;}
public virtual CreateVpcResponse CreateVpc(CreateVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcResponseUnmarshaller.Instance;return Invoke<CreateVpcResponse>(request, options);}
public override int FillFields(byte[] data, int offset, IEscherRecordFactory recordFactory){int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_color1 = LittleEndian.GetInt(data, pos + size); size += 4;field_2_color2 = LittleEndian.GetInt(data, pos + size); size += 4;field_3_color3 = LittleEndian.GetInt(data, pos + size); size += 4;field_4_color4 = LittleEndian.GetInt(data, pos + size); size += 4;bytesRemaining -= size;if (bytesRemaining != 0)throw new RecordFormatException("Expecting no remaining data but got " + bytesRemaining + " byte(s).");return 8 + size + bytesRemaining;}
public virtual string GetNewPath(){return newPath;}
public override BytesRef Subtract(BytesRef output, BytesRef inc){Debug.Assert(output != null);Debug.Assert(inc != null);if (inc == NO_OUTPUT){return output;}else if (inc.Length == output.Length){return NO_OUTPUT;}else{Debug.Assert(inc.Length < output.Length, "inc.length=" + inc.Length + " vs output.length=" + output.Length);Debug.Assert(inc.Length > 0);return new BytesRef(output.Bytes, output.Offset + inc.Length, output.Length - inc.Length);}}
public virtual NGit.Api.AddNoteCommand SetMessage(string message){CheckCallable();this.message = message;return this;}
public virtual void SetIndexFieldName(string dimName, string indexFieldName){lock (this){if (!fieldTypes.TryGetValue(dimName, out DimConfig fieldType)){fieldTypes[dimName] = new DimConfig { IndexFieldName = indexFieldName };}else{fieldType.IndexFieldName = indexFieldName;}}}
public StringBufferInputStream(string str){if (str == null){throw new System.ArgumentNullException();}buffer = str;count = str.Length;}
public virtual long GetOffset(){return position;}
public virtual int getColumnNumber(){return column;}
public virtual SendMessageBatchResponse SendMessageBatch(SendMessageBatchRequest request){var options = new InvokeOptions();options.RequestMarshaller = SendMessageBatchRequestMarshaller.Instance;options.ResponseUnmarshaller = SendMessageBatchResponseUnmarshaller.Instance;return Invoke<SendMessageBatchResponse>(request, options);}
public virtual ChangeTagsForResourceResponse ChangeTagsForResource(ChangeTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ChangeTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = ChangeTagsForResourceResponseUnmarshaller.Instance;return Invoke<ChangeTagsForResourceResponse>(request, options);}
public virtual void Inform(IResourceLoader loader){if (stopWordFiles != null){if (FORMAT_WORDSET.Equals(format, StringComparison.OrdinalIgnoreCase)){stopWords = GetWordSet(loader, stopWordFiles, ignoreCase);}else if (FORMAT_SNOWBALL.Equals(format, StringComparison.OrdinalIgnoreCase)){stopWords = GetSnowballWordSet(loader, stopWordFiles, ignoreCase);}else{throw new System.ArgumentException("Unknown 'format' specified for 'words' file: " + format);}}else{if (null != format){throw new System.ArgumentException("'format' can not be specified w/o an explicit 'words' file: " + format);}stopWords = new CharArraySet(m_luceneMatchVersion, StopAnalyzer.ENGLISH_STOP_WORDS_SET, ignoreCase);}}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(Row);out1.WriteShort(Column);out1.WriteShort(XFIndex);SerializeValue(out1);}
public virtual CreateBuildResponse CreateBuild(CreateBuildRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateBuildRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateBuildResponseUnmarshaller.Instance;return Invoke<CreateBuildResponse>(request, options);}
public virtual ListIdentitiesResponse ListIdentities(ListIdentitiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIdentitiesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIdentitiesResponseUnmarshaller.Instance;return Invoke<ListIdentitiesResponse>(request, options);}
public ScandinavianFoldingFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual IList<int> ToList(){IList<int> values = new ArrayList<int>();int n = intervals.Count;for (int i = 0; i < n; i++){Interval I = intervals[i];int a = I.a;int b = I.b;for (int v = a; v <= b; v++){values.Add(v);}}return values;}
public virtual UpdatePipelineResponse UpdatePipeline(UpdatePipelineRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdatePipelineRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdatePipelineResponseUnmarshaller.Instance;return Invoke<UpdatePipelineResponse>(request, options);}
public virtual string GetLineText(){int eol = RawParseUtils.NextLF(buf, offset);return RawParseUtils.Decode(Constants.CHARSET, buf, offset, eol);}
public ListMultipartUploadsRequest(string accountId, string vaultName){_accountId = accountId;_vaultName = vaultName;}
public virtual RegisterTaskDefinitionResponse RegisterTaskDefinition(RegisterTaskDefinitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTaskDefinitionRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTaskDefinitionResponseUnmarshaller.Instance;return Invoke<RegisterTaskDefinitionResponse>(request, options);}
public ParseException(Token currentToken,int[][] expectedTokenSequences,string[] tokenImage): base(Initialize(currentToken, expectedTokenSequences, tokenImage)){this.CurrentToken = currentToken;this.ExpectedTokenSequences = expectedTokenSequences;this.TokenImage = tokenImage;}
public int Compare(Property o1, Property o2){String VBA_PROJECT = "_VBA_PROJECT";String name1 = ((Property)o1).Name;String name2 = ((Property)o2).Name;int num = name1.Length - name2.Length;if (num == 0){if (name1.Equals(VBA_PROJECT, StringComparison.CurrentCulture)){num = 1;}else if (name2.Equals(VBA_PROJECT, StringComparison.CurrentCulture)){num = -1;}else{if (name1.StartsWith("__", StringComparison.Ordinal) && name2.StartsWith("__", StringComparison.Ordinal)){num = String.Compare(name1, name2, StringComparison.OrdinalIgnoreCase);}else if (name1.StartsWith("__", StringComparison.Ordinal)){num = 1;}else if (name2.StartsWith("__", StringComparison.Ordinal)){num = -1;}else{num = String.Compare(name1, name2, StringComparison.OrdinalIgnoreCase);}}}return num;}
public IList<SrndQuery> FieldsQueryList(){SrndQuery q;IList<SrndQuery> queries = new List<SrndQuery>();Jj_consume_token(RegexpToken.LPAREN);q = FieldsQuery();queries.Add(q);while (true){Jj_consume_token(RegexpToken.COMMA);q = FieldsQuery();queries.Add(q);switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk){case RegexpToken.COMMA:;break;default:jj_la1[7] = jj_gen;goto label_7;}}label_7:Jj_consume_token(RegexpToken.RPAREN);{ if (true) return queries; }throw new Exception("Missing return statement in function");}
public override ObjectId IdFor(TreeFormatter formatter){return Delegate().IdFor(formatter);}
public virtual DescribeResourceResponse DescribeResource(DescribeResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResourceResponseUnmarshaller.Instance;return Invoke<DescribeResourceResponse>(request, options);}
public sealed override object array(){return protectedArray();}
public void RemoveCharCount(){MutableSection s = (MutableSection)FirstSection;s.RemoveProperty(PropertyIDMap.PID_CHARCOUNT);}
public ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex){int nInnerArgs = args.Length - 1; if (nInnerArgs < 1){return ErrorEval.VALUE_INVALID;}Function innerFunc;try{ValueEval ve = OperandResolver.GetSingleValue(args[0], srcRowIndex, srcColumnIndex);int functionCode = OperandResolver.CoerceValueToInt(ve);innerFunc = FindFunction(functionCode);}catch (EvaluationException e){return e.GetErrorEval();}ValueEval[] innerArgs = new ValueEval[nInnerArgs];Array.Copy(args, 1, innerArgs, 0, nInnerArgs);return innerFunc.Evaluate(innerArgs, srcRowIndex, srcColumnIndex);}
public virtual StopTransformJobResponse StopTransformJob(StopTransformJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTransformJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTransformJobResponseUnmarshaller.Instance;return Invoke<StopTransformJobResponse>(request, options);}
public virtual IEnumerator<string> Keys(){return new Iterator(this);}
public virtual DeleteBrokerResponse DeleteBroker(DeleteBrokerRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteBrokerRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteBrokerResponseUnmarshaller.Instance;return Invoke<DeleteBrokerResponse>(request, options);}
public virtual bool Contains(string cs){return map.ContainsKey(cs);}
public virtual ICollection<string> GetCapabilities(){return capabilities;}
public char previous(){if (offset == start){return java.text.CharacterIteratorClass.DONE;}return @string[--offset];}
public override java.nio.LongBuffer put(long[] src, int srcOffset, int longCount){if (longCount > remaining()){throw new java.nio.BufferOverflowException();}System.Array.Copy(src, srcOffset, backingArray, offset + _position, longCount);_position += longCount;return this;}
public virtual ModifyInstancePlacementResponse ModifyInstancePlacement(ModifyInstancePlacementRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyInstancePlacementRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyInstancePlacementResponseUnmarshaller.Instance;return Invoke<ModifyInstancePlacementResponse>(request, options);}
public void RemoveSheet(int sheetIdx){_externSheetRecord.RemoveSheet(sheetIdx);}
public virtual GetUserResponse GetUser(GetUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetUserRequestMarshaller.Instance;options.ResponseUnmarshaller = GetUserResponseUnmarshaller.Instance;return Invoke<GetUserResponse>(request, options);}
public CompositeReaderContext Build(){return (CompositeReaderContext)Build(null, reader, 0, 0);}
public virtual UpdateApnsChannelResponse UpdateApnsChannel(UpdateApnsChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApnsChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApnsChannelResponseUnmarshaller.Instance;return Invoke<UpdateApnsChannelResponse>(request, options);}
public override bool Contains(object needle){if (needle is string){string n = (string)needle;return names.ContainsKey(n) || names.ContainsKey(StringUtils.ToLowerCase(n));}return false;}
public virtual PersonIdent GetSourceCommitter(int idx){return sourceCommitters[idx];}
public virtual CreateNetworkAclResponse CreateNetworkAcl(CreateNetworkAclRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkAclRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkAclResponseUnmarshaller.Instance;return Invoke<CreateNetworkAclResponse>(request, options);}
public override Object Clone(){BeginRecord br = new BeginRecord();return br;}
public IQueryNode ConjQuery(string field){IQueryNode first, c;List<IQueryNode> clauses = null;first = ModClause(field);while (true){switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk){case RegexpToken.AND:;break;default:jj_la1[6] = jj_gen;goto label_3_break;}Jj_consume_token(RegexpToken.AND);c = ModClause(field);if (clauses == null){clauses = new List<IQueryNode>();clauses.Add(first);}clauses.Add(c);}label_3_break:if (clauses != null){{ if (true) return new AndQueryNode(clauses); }}else{{ if (true) return first; }}throw new Exception("Missing return statement in function");}
public int GetEndA(){return endA;}
public ArabicStemFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public NPOI.SS.UserModel.IFormulaEvaluator CreateFormulaEvaluator(){return new HSSFFormulaEvaluator(workbook);}
public void RemoveMMClipCount(){MutableSection s = (MutableSection)FirstSection;s.RemoveProperty(PropertyIDMap.PID_MMCLIPCOUNT);}
public ExternalBookBlock(String url, String[] sheetNames){_externalBookRecord = SupBookRecord.CreateExternalReferences(url, sheetNames);_crnBlocks = new CRNBlock[0];}
public static byte[] Encode(string str){ByteBuffer bb = NGit.Constants.CHARSET.Encode(str);int len = bb.Limit();if (bb.HasArray() && bb.ArrayOffset() == 0){byte[] arr = ((byte[])bb.Array());if (arr.Length == len){return arr;}}byte[] arr_1 = new byte[len];bb.Get(arr_1);return arr_1;}
public virtual RebootWorkspacesResponse RebootWorkspaces(RebootWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootWorkspacesResponseUnmarshaller.Instance;return Invoke<RebootWorkspacesResponse>(request, options);}
public DistributionConfig(string callerReference, bool enabled){_callerReference = callerReference;_enabled = enabled;}
public static bool IsContainer(short options, short recordId){if (recordId >= EscherContainerRecord.DGG_CONTAINER && recordId<= EscherContainerRecord.SOLVER_CONTAINER){return true;}else{if (recordId == EscherTextboxRecord.RECORD_ID){return false;}else{return (options & (short)0x000F) == (short)0x000F;}}}
public override void clear(){if (_size != 0){java.util.Arrays.fill(array, 0, _size, null);_size = 0;modCount++;}}
public GetDownloadUrlsRequest(): base("CloudPhoto", "2017-07-11", "GetDownloadUrls", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name);sb.Append(" [");AsFormulaString(sb);sb.Append("]");return sb.ToString();}
public virtual bool IsNewFragment(){bool isNewFrag = offsetAtt.EndOffset >= (FragmentSize*currentNumFrags);if (isNewFrag){currentNumFrags++;}return isNewFrag;}
public override Object Clone(){GridsetRecord rec = new GridsetRecord();rec.field_1_gridset_flag = field_1_gridset_flag;return rec;}
public override Object Clone(){LeftMarginRecord rec = new LeftMarginRecord();rec.field_1_margin = this.field_1_margin;return rec;}
public void Execute(Lexer lexer){lexer.Skip();}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[COUNTRY]\n");buffer.Append("    .defaultcountry  = ").Append(StringUtil.ToHexString(DefaultCountry)).Append("\n");buffer.Append("    .currentcountry  = ").Append(StringUtil.ToHexString(CurrentCountry)).Append("\n");buffer.Append("[/COUNTRY]\n");return buffer.ToString();}
public override String ToString(){StringBuilder buffer = new StringBuilder("[Data Table - Parent cell is an interior cell in a data table]\n");buffer.Append("top left row = ").Append(Row).Append("\n");buffer.Append("top left col = ").Append(Column).Append("\n");return buffer.ToString();}
public virtual java.util.Set<java.util.MapClass.Entry<K, V>> entrySet(){lock (this){java.util.Set<java.util.MapClass.Entry<K, V>> es = _entrySet;return (es != null) ? es : (_entrySet = new java.util.Hashtable<K, V>.EntrySet(this));}}
public virtual RevCommit GetSourceCommit(int idx){return sourceCommits[idx];}
public virtual DeleteDBInstanceAutomatedBackupResponse DeleteDBInstanceAutomatedBackup(DeleteDBInstanceAutomatedBackupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDBInstanceAutomatedBackupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDBInstanceAutomatedBackupResponseUnmarshaller.Instance;return Invoke<DeleteDBInstanceAutomatedBackupResponse>(request, options);}
public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec){if (args.Length != 1){return ErrorEval.VALUE_INVALID;}int val;try{val = EvaluateArgParity(args[0], ec.RowIndex, ec.ColumnIndex);}catch (EvaluationException e){return e.GetErrorEval();}return BoolEval.ValueOf(val == _desiredParity);}
public bool Exists(string fileName){Debug.Assert(IsLocked);return refCounts.TryGetValue(fileName, out RefCount value) ? value.count > 0 : false;}
public virtual GetRelationalDatabaseBlueprintsResponse GetRelationalDatabaseBlueprints(GetRelationalDatabaseBlueprintsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRelationalDatabaseBlueprintsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRelationalDatabaseBlueprintsResponseUnmarshaller.Instance;return Invoke<GetRelationalDatabaseBlueprintsResponse>(request, options);}
public virtual CreateStageResponse CreateStage(CreateStageRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStageRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStageResponseUnmarshaller.Instance;return Invoke<CreateStageResponse>(request, options);}
public virtual ObjectId GetExpectedOldObjectId(){return expValue;}
public virtual GetVpcLinksResponse GetVpcLinks(GetVpcLinksRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVpcLinksRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVpcLinksResponseUnmarshaller.Instance;return Invoke<GetVpcLinksResponse>(request, options);}
public virtual DeleteIAMPolicyAssignmentResponse DeleteIAMPolicyAssignment(DeleteIAMPolicyAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteIAMPolicyAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteIAMPolicyAssignmentResponseUnmarshaller.Instance;return Invoke<DeleteIAMPolicyAssignmentResponse>(request, options);}
public virtual void Clear(){map.Clear();}
public ProfilingATNSimulator(Parser parser): base(parser,parser.Interpreter.atn,parser.Interpreter.decisionToDFA,parser.Interpreter.getSharedContextCache()){numDecisions = atn.decisionToState.Count;decisions = new DecisionInfo[numDecisions];for (int i = 0; i < numDecisions; i++){decisions[i] = new DecisionInfo(i);}}
public BOFRecord(RecordInputStream in1){field_1_version = in1.ReadShort();field_2_type = in1.ReadShort();if (in1.Remaining >= 2){field_3_build = in1.ReadShort();}if (in1.Remaining >= 2){field_4_year = in1.ReadShort();}if (in1.Remaining >= 4){field_5_history = in1.ReadInt();}if (in1.Remaining >= 4){field_6_rversion = in1.ReadInt();}}
public virtual DescribeClientVpnTargetNetworksResponse DescribeClientVpnTargetNetworks(DescribeClientVpnTargetNetworksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnTargetNetworksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnTargetNetworksResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnTargetNetworksResponse>(request, options);}
public override void Serialize(ILittleEndianOutput out1){throw new RecordFormatException("Sorry, you can't serialize MulRK in this release");}
public static string Escape(string s){StringBuilder sb = new StringBuilder();for (int i = 0; i < s.Length; i++){char c = s[i];if (c == '\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'|| c == ':' || c == '^' || c == '[' || c == ']' || c == '\"'|| c == '{' || c == '}' || c == '~' || c == '*' || c == '?'|| c == '|' || c == '&' || c == '/'){sb.Append('\\');}sb.Append(c);}return sb.ToString();}
public virtual IDictionary<string, MergeResult<Sequence>> GetMergeResults(){return mergeResults;}
public virtual SearchFacesResponse SearchFaces(SearchFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = SearchFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = SearchFacesResponseUnmarshaller.Instance;return Invoke<SearchFacesResponse>(request, options);}
public sealed override bool isDirect(){return false;}
public static Antlr4.Runtime.Misc.IntervalSet Of(int a, int b){Antlr4.Runtime.Misc.IntervalSet s = new Antlr4.Runtime.Misc.IntervalSet();s.Add(a, b);return s;}
public virtual CompleteMigrationResponse CompleteMigration(CompleteMigrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteMigrationRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteMigrationResponseUnmarshaller.Instance;return Invoke<CompleteMigrationResponse>(request, options);}
public virtual char[] NextKey(){GoNext();return outerInstance.keys[lastPos];}
public virtual GetAccountSettingsResponse GetAccountSettings(GetAccountSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAccountSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAccountSettingsResponseUnmarshaller.Instance;return Invoke<GetAccountSettingsResponse>(request, options);}
public virtual BatchDetectSyntaxResponse BatchDetectSyntax(BatchDetectSyntaxRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDetectSyntaxRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDetectSyntaxResponseUnmarshaller.Instance;return Invoke<BatchDetectSyntaxResponse>(request, options);}
public virtual string GetResultPath(){return resultPath;}
public StemmerOverrideFilterFactory(IDictionary<string, string> args): base(args){dictionaryFiles = Get(args, "dictionary");ignoreCase = GetBoolean(args, "ignoreCase", false);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual DisassociateSkillFromSkillGroupResponse DisassociateSkillFromSkillGroup(DisassociateSkillFromSkillGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateSkillFromSkillGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateSkillFromSkillGroupResponseUnmarshaller.Instance;return Invoke<DisassociateSkillFromSkillGroupResponse>(request, options);}
public DeltaIndex(byte[] sourceBuffer){src = sourceBuffer;DeltaIndexScanner scan = new DeltaIndexScanner(src, src.Length);table = scan.table;tableMask = scan.tableMask;entries = new long[1 + CountEntries(scan)];CopyEntries(scan);}
public virtual ListAccountSettingsResponse ListAccountSettings(ListAccountSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAccountSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAccountSettingsResponseUnmarshaller.Instance;return Invoke<ListAccountSettingsResponse>(request, options);}
public virtual InviteUsersResponse InviteUsers(InviteUsersRequest request){var options = new InvokeOptions();options.RequestMarshaller = InviteUsersRequestMarshaller.Instance;options.ResponseUnmarshaller = InviteUsersResponseUnmarshaller.Instance;return Invoke<InviteUsersResponse>(request, options);}
public string getPath(){return path;}
public DeleteTableRequest(string tableName){_tableName = tableName;}
public override TokenStream Create(TokenStream input){return new KStemFilter(input);}
public override int Read(char[] c, int off, int len){if (pos < size){len = Math.Min(len, size - pos);s.CopyTo(pos, c, off, pos + len - pos);pos += len;return len;}else{s = null;return -1;}}
public ByteBlockPool(Allocator allocator){ByteUpto = BYTE_BLOCK_SIZE;ByteOffset = -BYTE_BLOCK_SIZE;this.allocator = allocator;}
public override long RamBytesUsed(){long sizeInByes = ((postingsReader != null) ? postingsReader.RamBytesUsed() : 0);foreach (FieldReader reader in fields.Values){sizeInByes += reader.RamBytesUsed();}return sizeInByes;}
public int end(int group_1){ensureMatch();return matchOffsets[(group_1 * 2) + 1];}
public static long GetResultSize(byte[] delta){int p = 0;int c;do{c = delta[p++] & unchecked((int)(0xff));}while ((c & unchecked((int)(0x80))) != 0);long resLen = 0;int shift = 0;do{c = delta[p++] & unchecked((int)(0xff));resLen |= ((long)(c & unchecked((int)(0x7f)))) << shift;shift += 7;}while ((c & unchecked((int)(0x80))) != 0);return resLen;}
public void SetMaxDocFreqPct(int maxPercentage){this.MaxDocFreq = maxPercentage * ir.NumDocs / 100;}
public virtual DetectDominantLanguageResponse DetectDominantLanguage(DetectDominantLanguageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DetectDominantLanguageRequestMarshaller.Instance;options.ResponseUnmarshaller = DetectDominantLanguageResponseUnmarshaller.Instance;return Invoke<DetectDominantLanguageResponse>(request, options);}
public virtual ParseTreePattern Compile(string pattern, int patternRuleIndex){IList<IToken> tokenList = Tokenize(pattern);ListTokenSource tokenSrc = new ListTokenSource(tokenList);CommonTokenStream tokens = new CommonTokenStream(tokenSrc);ParserInterpreter parserInterp = new ParserInterpreter(parser.GrammarFileName, parser.Vocabulary, Arrays.AsList(parser.RuleNames), parser.GetATNWithBypassAlts(), tokens);IParseTree tree = null;try{parserInterp.ErrorHandler = new BailErrorStrategy();tree = parserInterp.Parse(patternRuleIndex);}catch (ParseCanceledException e){throw (RecognitionException)e.InnerException;}catch (RecognitionException){throw;}catch (Exception e){throw new ParseTreePatternMatcher.CannotInvokeStartRule(e);}if (tokens.LA(1) != TokenConstants.EOF){throw new ParseTreePatternMatcher.StartRuleDoesNotConsumeFullPattern();}return new ParseTreePattern(this, pattern, patternRuleIndex, tree);}
public override bool IsIndexTerm(BytesRef term, TermStats stats){if (count >= interval){count = 1;return true;}else{count++;return false;}}
public static List<String> GetNotSupportedFunctionNames(){List<String> lst = new List<String>();lst.AddRange(FunctionEval.GetNotSupportedFunctionNames());lst.AddRange(AnalysisToolPak.GetNotSupportedFunctionNames());return lst;}
public StreamCopyThread(InputStream i, OutputStream o){SetName(Sharpen.Thread.CurrentThread().GetName() + "-StreamCopy");src = i;dst = o;}
public static bool IsComponentRecord(int sid){switch (sid){case ProtectRecord.sid:case ObjectProtectRecord.sid:case ScenarioProtectRecord.sid:case PasswordRecord.sid:return true;}return false;}
public override ICollection<string> Call(){CheckCallable();try{SubmoduleWalk generator = SubmoduleWalk.ForIndex(repo);if (!paths.IsEmpty()){generator.SetFilter(PathFilterGroup.CreateFromStrings(paths));}StoredConfig config = repo.GetConfig();IList<string> initialized = new AList<string>();while (generator.Next()){if (generator.GetConfigUrl() != null){continue;}string path = generator.GetPath();string url = generator.GetRemoteUrl();string update = generator.GetModulesUpdate();if (url != null){config.SetString(ConfigConstants.CONFIG_SUBMODULE_SECTION, path, ConfigConstants.CONFIG_KEY_URL, url);}if (update != null){config.SetString(ConfigConstants.CONFIG_SUBMODULE_SECTION, path, ConfigConstants.CONFIG_KEY_UPDATE, update);}if (url != null || update != null){initialized.AddItem(path);}}if (!initialized.IsEmpty()){config.Save();}return initialized;}catch (IOException e){throw new JGitInternalException(e.Message, e);}catch (ConfigInvalidException e){throw new JGitInternalException(e.Message, e);}}
public virtual CharBlockArray Append(ICharSequence chars){return Append(chars, 0, chars.Length);}
public virtual int indexOf(object @object){object[] snapshot = elements;return indexOf(@object, snapshot, 0, snapshot.Length);}
public FontBasisRecord(RecordInputStream in1){field_1_xBasis = in1.ReadShort();field_2_yBasis = in1.ReadShort();field_3_heightBasis = in1.ReadShort();field_4_scale = in1.ReadShort();field_5_indexToFontTable = in1.ReadShort();}
public virtual int CompareTo(ScoreTerm other){if (Term.BytesEquals(other.Term)){return 0; }if (this.Boost == other.Boost){return other.Term.CompareTo(this.Term);}else{return this.Boost.CompareTo(other.Boost);}}
public virtual DescribeFleetUtilizationResponse DescribeFleetUtilization(DescribeFleetUtilizationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeFleetUtilizationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeFleetUtilizationResponseUnmarshaller.Instance;return Invoke<DescribeFleetUtilizationResponse>(request, options);}
public static string FromDouble(double value){return value.ToString(CultureInfo.InvariantCulture);}
public String GetSignificantDecimalDigitsLastDigitRounded(){long wp = _wholePart + 5; StringBuilder sb = new StringBuilder(24);sb.Append(wp);sb[sb.Length - 1]= '0';return sb.ToString();}
public bool ShouldRefresh(){var now = DateTime.UtcNow.Ticks;return now - lastFailedRefreshTime > refreshIntervalInMillSeconds;}
public static int GetBiasedExponent(long rawBits){return (int)((rawBits & EXPONENT_MASK) >> EXPONENT_SHIFT);}
public virtual int GetDeltaSearchWindowSize(){return deltaSearchWindowSize;}
public override void Copy(MutableValue source){MutableValueStr s = (MutableValueStr)source;Exists = s.Exists;Value.CopyBytes(s.Value);}
